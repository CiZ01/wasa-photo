{
  "version": 3,
  "sources": ["../../@vue/compiler-core/dist/compiler-core.esm-bundler.js"],
  "sourcesContent": ["import { isString, hyphenate, NOOP, extend, isObject, NO, isArray, makeMap, isSymbol, EMPTY_OBJ, capitalize, camelize as camelize$1, PatchFlagNames, slotFlagsText, isOn, isBuiltInDirective, isReservedProp, toHandlerKey } from '@vue/shared';\nexport { generateCodeFrame } from '@vue/shared';\n\nfunction defaultOnError(error) {\n    throw error;\n}\nfunction defaultOnWarn(msg) {\n    (process.env.NODE_ENV !== 'production') && console.warn(`[Vue warn] ${msg.message}`);\n}\nfunction createCompilerError(code, loc, messages, additionalMessage) {\n    const msg = (process.env.NODE_ENV !== 'production') || !true\n        ? (messages || errorMessages)[code] + (additionalMessage || ``)\n        : code;\n    const error = new SyntaxError(String(msg));\n    error.code = code;\n    error.loc = loc;\n    return error;\n}\nconst errorMessages = {\n    // parse errors\n    [0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\n    [1 /* CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\n    [2 /* DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\n    [3 /* END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\n    [4 /* END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\n    [5 /* EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\n    [6 /* EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\n    [7 /* EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\n    [8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\n    [9 /* EOF_IN_TAG */]: 'Unexpected EOF in tag.',\n    [10 /* INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\n    [11 /* INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\n    [12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\n    [13 /* MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\n    [14 /* MISSING_END_TAG_NAME */]: 'End tag name was expected.',\n    [15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\n    [16 /* NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\n    [17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\n    [18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\n    [19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\n    [21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\n    [20 /* UNEXPECTED_NULL_CHARACTER */]: `Unexpected null character.`,\n    [22 /* UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\n    // Vue-specific parse errors\n    [23 /* X_INVALID_END_TAG */]: 'Invalid end tag.',\n    [24 /* X_MISSING_END_TAG */]: 'Element is missing end tag.',\n    [25 /* X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\n    [27 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' +\n        'Note that dynamic directive argument cannot contain spaces.',\n    [26 /* X_MISSING_DIRECTIVE_NAME */]: 'Legal directive name was expected.',\n    // transform errors\n    [28 /* X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\n    [29 /* X_V_IF_SAME_KEY */]: `v-if/else branches must use unique keys.`,\n    [30 /* X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n    [31 /* X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\n    [32 /* X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\n    [33 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */]: `<template v-for> key should be placed on the <template> tag.`,\n    [34 /* X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\n    [35 /* X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\n    [36 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\n    [37 /* X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>.` +\n        `When there are multiple named slots, all slots should use <template> ` +\n        `syntax to avoid scope ambiguity.`,\n    [38 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\n    [39 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` +\n        `default slot. These children will be ignored.`,\n    [40 /* X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\n    [41 /* X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\n    [42 /* X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\n    [43 /* X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n    [44 /* X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\n    [45 /* X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\n    // generic errors\n    [46 /* X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n    [47 /* X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\n    [48 /* X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n    [49 /* X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`,\n    // just to fulfill types\n    [50 /* __EXTEND_POINT__ */]: ``\n};\n\nconst FRAGMENT = Symbol((process.env.NODE_ENV !== 'production') ? `Fragment` : ``);\nconst TELEPORT = Symbol((process.env.NODE_ENV !== 'production') ? `Teleport` : ``);\nconst SUSPENSE = Symbol((process.env.NODE_ENV !== 'production') ? `Suspense` : ``);\nconst KEEP_ALIVE = Symbol((process.env.NODE_ENV !== 'production') ? `KeepAlive` : ``);\nconst BASE_TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `BaseTransition` : ``);\nconst OPEN_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `openBlock` : ``);\nconst CREATE_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createBlock` : ``);\nconst CREATE_ELEMENT_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createElementBlock` : ``);\nconst CREATE_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createVNode` : ``);\nconst CREATE_ELEMENT_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createElementVNode` : ``);\nconst CREATE_COMMENT = Symbol((process.env.NODE_ENV !== 'production') ? `createCommentVNode` : ``);\nconst CREATE_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `createTextVNode` : ``);\nconst CREATE_STATIC = Symbol((process.env.NODE_ENV !== 'production') ? `createStaticVNode` : ``);\nconst RESOLVE_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveComponent` : ``);\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDynamicComponent` : ``);\nconst RESOLVE_DIRECTIVE = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDirective` : ``);\nconst RESOLVE_FILTER = Symbol((process.env.NODE_ENV !== 'production') ? `resolveFilter` : ``);\nconst WITH_DIRECTIVES = Symbol((process.env.NODE_ENV !== 'production') ? `withDirectives` : ``);\nconst RENDER_LIST = Symbol((process.env.NODE_ENV !== 'production') ? `renderList` : ``);\nconst RENDER_SLOT = Symbol((process.env.NODE_ENV !== 'production') ? `renderSlot` : ``);\nconst CREATE_SLOTS = Symbol((process.env.NODE_ENV !== 'production') ? `createSlots` : ``);\nconst TO_DISPLAY_STRING = Symbol((process.env.NODE_ENV !== 'production') ? `toDisplayString` : ``);\nconst MERGE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `mergeProps` : ``);\nconst NORMALIZE_CLASS = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeClass` : ``);\nconst NORMALIZE_STYLE = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeStyle` : ``);\nconst NORMALIZE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeProps` : ``);\nconst GUARD_REACTIVE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `guardReactiveProps` : ``);\nconst TO_HANDLERS = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlers` : ``);\nconst CAMELIZE = Symbol((process.env.NODE_ENV !== 'production') ? `camelize` : ``);\nconst CAPITALIZE = Symbol((process.env.NODE_ENV !== 'production') ? `capitalize` : ``);\nconst TO_HANDLER_KEY = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlerKey` : ``);\nconst SET_BLOCK_TRACKING = Symbol((process.env.NODE_ENV !== 'production') ? `setBlockTracking` : ``);\nconst PUSH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `pushScopeId` : ``);\nconst POP_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `popScopeId` : ``);\nconst WITH_CTX = Symbol((process.env.NODE_ENV !== 'production') ? `withCtx` : ``);\nconst UNREF = Symbol((process.env.NODE_ENV !== 'production') ? `unref` : ``);\nconst IS_REF = Symbol((process.env.NODE_ENV !== 'production') ? `isRef` : ``);\nconst WITH_MEMO = Symbol((process.env.NODE_ENV !== 'production') ? `withMemo` : ``);\nconst IS_MEMO_SAME = Symbol((process.env.NODE_ENV !== 'production') ? `isMemoSame` : ``);\n// Name mapping for runtime helpers that need to be imported from 'vue' in\n// generated code. Make sure these are correctly exported in the runtime!\n// Using `any` here because TS doesn't allow symbols as index type.\nconst helperNameMap = {\n    [FRAGMENT]: `Fragment`,\n    [TELEPORT]: `Teleport`,\n    [SUSPENSE]: `Suspense`,\n    [KEEP_ALIVE]: `KeepAlive`,\n    [BASE_TRANSITION]: `BaseTransition`,\n    [OPEN_BLOCK]: `openBlock`,\n    [CREATE_BLOCK]: `createBlock`,\n    [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n    [CREATE_VNODE]: `createVNode`,\n    [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n    [CREATE_COMMENT]: `createCommentVNode`,\n    [CREATE_TEXT]: `createTextVNode`,\n    [CREATE_STATIC]: `createStaticVNode`,\n    [RESOLVE_COMPONENT]: `resolveComponent`,\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\n    [RESOLVE_FILTER]: `resolveFilter`,\n    [WITH_DIRECTIVES]: `withDirectives`,\n    [RENDER_LIST]: `renderList`,\n    [RENDER_SLOT]: `renderSlot`,\n    [CREATE_SLOTS]: `createSlots`,\n    [TO_DISPLAY_STRING]: `toDisplayString`,\n    [MERGE_PROPS]: `mergeProps`,\n    [NORMALIZE_CLASS]: `normalizeClass`,\n    [NORMALIZE_STYLE]: `normalizeStyle`,\n    [NORMALIZE_PROPS]: `normalizeProps`,\n    [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n    [TO_HANDLERS]: `toHandlers`,\n    [CAMELIZE]: `camelize`,\n    [CAPITALIZE]: `capitalize`,\n    [TO_HANDLER_KEY]: `toHandlerKey`,\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\n    [PUSH_SCOPE_ID]: `pushScopeId`,\n    [POP_SCOPE_ID]: `popScopeId`,\n    [WITH_CTX]: `withCtx`,\n    [UNREF]: `unref`,\n    [IS_REF]: `isRef`,\n    [WITH_MEMO]: `withMemo`,\n    [IS_MEMO_SAME]: `isMemoSame`\n};\nfunction registerRuntimeHelpers(helpers) {\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\n        helperNameMap[s] = helpers[s];\n    });\n}\n\n// AST Utilities ---------------------------------------------------------------\n// Some expressions, e.g. sequence and conditional expressions, are never\n// associated with template nodes, so their source locations are just a stub.\n// Container types like CompoundExpression also don't need a real location.\nconst locStub = {\n    source: '',\n    start: { line: 1, column: 1, offset: 0 },\n    end: { line: 1, column: 1, offset: 0 }\n};\nfunction createRoot(children, loc = locStub) {\n    return {\n        type: 0 /* ROOT */,\n        children,\n        helpers: [],\n        components: [],\n        directives: [],\n        hoists: [],\n        imports: [],\n        cached: 0,\n        temps: 0,\n        codegenNode: undefined,\n        loc\n    };\n}\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\n    if (context) {\n        if (isBlock) {\n            context.helper(OPEN_BLOCK);\n            context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\n        }\n        else {\n            context.helper(getVNodeHelper(context.inSSR, isComponent));\n        }\n        if (directives) {\n            context.helper(WITH_DIRECTIVES);\n        }\n    }\n    return {\n        type: 13 /* VNODE_CALL */,\n        tag,\n        props,\n        children,\n        patchFlag,\n        dynamicProps,\n        directives,\n        isBlock,\n        disableTracking,\n        isComponent,\n        loc\n    };\n}\nfunction createArrayExpression(elements, loc = locStub) {\n    return {\n        type: 17 /* JS_ARRAY_EXPRESSION */,\n        loc,\n        elements\n    };\n}\nfunction createObjectExpression(properties, loc = locStub) {\n    return {\n        type: 15 /* JS_OBJECT_EXPRESSION */,\n        loc,\n        properties\n    };\n}\nfunction createObjectProperty(key, value) {\n    return {\n        type: 16 /* JS_PROPERTY */,\n        loc: locStub,\n        key: isString(key) ? createSimpleExpression(key, true) : key,\n        value\n    };\n}\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0 /* NOT_CONSTANT */) {\n    return {\n        type: 4 /* SIMPLE_EXPRESSION */,\n        loc,\n        content,\n        isStatic,\n        constType: isStatic ? 3 /* CAN_STRINGIFY */ : constType\n    };\n}\nfunction createInterpolation(content, loc) {\n    return {\n        type: 5 /* INTERPOLATION */,\n        loc,\n        content: isString(content)\n            ? createSimpleExpression(content, false, loc)\n            : content\n    };\n}\nfunction createCompoundExpression(children, loc = locStub) {\n    return {\n        type: 8 /* COMPOUND_EXPRESSION */,\n        loc,\n        children\n    };\n}\nfunction createCallExpression(callee, args = [], loc = locStub) {\n    return {\n        type: 14 /* JS_CALL_EXPRESSION */,\n        loc,\n        callee,\n        arguments: args\n    };\n}\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\n    return {\n        type: 18 /* JS_FUNCTION_EXPRESSION */,\n        params,\n        returns,\n        newline,\n        isSlot,\n        loc\n    };\n}\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\n    return {\n        type: 19 /* JS_CONDITIONAL_EXPRESSION */,\n        test,\n        consequent,\n        alternate,\n        newline,\n        loc: locStub\n    };\n}\nfunction createCacheExpression(index, value, isVNode = false) {\n    return {\n        type: 20 /* JS_CACHE_EXPRESSION */,\n        index,\n        value,\n        isVNode,\n        loc: locStub\n    };\n}\nfunction createBlockStatement(body) {\n    return {\n        type: 21 /* JS_BLOCK_STATEMENT */,\n        body,\n        loc: locStub\n    };\n}\nfunction createTemplateLiteral(elements) {\n    return {\n        type: 22 /* JS_TEMPLATE_LITERAL */,\n        elements,\n        loc: locStub\n    };\n}\nfunction createIfStatement(test, consequent, alternate) {\n    return {\n        type: 23 /* JS_IF_STATEMENT */,\n        test,\n        consequent,\n        alternate,\n        loc: locStub\n    };\n}\nfunction createAssignmentExpression(left, right) {\n    return {\n        type: 24 /* JS_ASSIGNMENT_EXPRESSION */,\n        left,\n        right,\n        loc: locStub\n    };\n}\nfunction createSequenceExpression(expressions) {\n    return {\n        type: 25 /* JS_SEQUENCE_EXPRESSION */,\n        expressions,\n        loc: locStub\n    };\n}\nfunction createReturnStatement(returns) {\n    return {\n        type: 26 /* JS_RETURN_STATEMENT */,\n        returns,\n        loc: locStub\n    };\n}\n\nconst isStaticExp = (p) => p.type === 4 /* SIMPLE_EXPRESSION */ && p.isStatic;\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\nfunction isCoreComponent(tag) {\n    if (isBuiltInType(tag, 'Teleport')) {\n        return TELEPORT;\n    }\n    else if (isBuiltInType(tag, 'Suspense')) {\n        return SUSPENSE;\n    }\n    else if (isBuiltInType(tag, 'KeepAlive')) {\n        return KEEP_ALIVE;\n    }\n    else if (isBuiltInType(tag, 'BaseTransition')) {\n        return BASE_TRANSITION;\n    }\n}\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\n/**\n * Simple lexer to check if an expression is a member expression. This is\n * lax and only checks validity at the root level (i.e. does not validate exps\n * inside square brackets), but it's ok since these are only used on template\n * expressions and false positives are invalid expressions in the first place.\n */\nconst isMemberExpressionBrowser = (path) => {\n    // remove whitespaces around . or [ first\n    path = path.trim().replace(whitespaceRE, s => s.trim());\n    let state = 0 /* inMemberExp */;\n    let stateStack = [];\n    let currentOpenBracketCount = 0;\n    let currentOpenParensCount = 0;\n    let currentStringType = null;\n    for (let i = 0; i < path.length; i++) {\n        const char = path.charAt(i);\n        switch (state) {\n            case 0 /* inMemberExp */:\n                if (char === '[') {\n                    stateStack.push(state);\n                    state = 1 /* inBrackets */;\n                    currentOpenBracketCount++;\n                }\n                else if (char === '(') {\n                    stateStack.push(state);\n                    state = 2 /* inParens */;\n                    currentOpenParensCount++;\n                }\n                else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\n                    return false;\n                }\n                break;\n            case 1 /* inBrackets */:\n                if (char === `'` || char === `\"` || char === '`') {\n                    stateStack.push(state);\n                    state = 3 /* inString */;\n                    currentStringType = char;\n                }\n                else if (char === `[`) {\n                    currentOpenBracketCount++;\n                }\n                else if (char === `]`) {\n                    if (!--currentOpenBracketCount) {\n                        state = stateStack.pop();\n                    }\n                }\n                break;\n            case 2 /* inParens */:\n                if (char === `'` || char === `\"` || char === '`') {\n                    stateStack.push(state);\n                    state = 3 /* inString */;\n                    currentStringType = char;\n                }\n                else if (char === `(`) {\n                    currentOpenParensCount++;\n                }\n                else if (char === `)`) {\n                    // if the exp ends as a call then it should not be considered valid\n                    if (i === path.length - 1) {\n                        return false;\n                    }\n                    if (!--currentOpenParensCount) {\n                        state = stateStack.pop();\n                    }\n                }\n                break;\n            case 3 /* inString */:\n                if (char === currentStringType) {\n                    state = stateStack.pop();\n                    currentStringType = null;\n                }\n                break;\n        }\n    }\n    return !currentOpenBracketCount && !currentOpenParensCount;\n};\nconst isMemberExpressionNode = NOOP\n    ;\nconst isMemberExpression = isMemberExpressionBrowser\n    ;\nfunction getInnerRange(loc, offset, length) {\n    const source = loc.source.slice(offset, offset + length);\n    const newLoc = {\n        source,\n        start: advancePositionWithClone(loc.start, loc.source, offset),\n        end: loc.end\n    };\n    if (length != null) {\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\n    }\n    return newLoc;\n}\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\n    return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\n}\n// advance by mutation without cloning (for performance reasons), since this\n// gets called a lot in the parser\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\n    let linesCount = 0;\n    let lastNewLinePos = -1;\n    for (let i = 0; i < numberOfCharacters; i++) {\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\n            linesCount++;\n            lastNewLinePos = i;\n        }\n    }\n    pos.offset += numberOfCharacters;\n    pos.line += linesCount;\n    pos.column =\n        lastNewLinePos === -1\n            ? pos.column + numberOfCharacters\n            : numberOfCharacters - lastNewLinePos;\n    return pos;\n}\nfunction assert(condition, msg) {\n    /* istanbul ignore if */\n    if (!condition) {\n        throw new Error(msg || `unexpected compiler condition`);\n    }\n}\nfunction findDir(node, name, allowEmpty = false) {\n    for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 7 /* DIRECTIVE */ &&\n            (allowEmpty || p.exp) &&\n            (isString(name) ? p.name === name : name.test(p.name))) {\n            return p;\n        }\n    }\n}\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\n    for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 6 /* ATTRIBUTE */) {\n            if (dynamicOnly)\n                continue;\n            if (p.name === name && (p.value || allowEmpty)) {\n                return p;\n            }\n        }\n        else if (p.name === 'bind' &&\n            (p.exp || allowEmpty) &&\n            isStaticArgOf(p.arg, name)) {\n            return p;\n        }\n    }\n}\nfunction isStaticArgOf(arg, name) {\n    return !!(arg && isStaticExp(arg) && arg.content === name);\n}\nfunction hasDynamicKeyVBind(node) {\n    return node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\n        p.name === 'bind' &&\n        (!p.arg || // v-bind=\"obj\"\n            p.arg.type !== 4 /* SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\n            !p.arg.isStatic) // v-bind:[foo]\n    );\n}\nfunction isText(node) {\n    return node.type === 5 /* INTERPOLATION */ || node.type === 2 /* TEXT */;\n}\nfunction isVSlot(p) {\n    return p.type === 7 /* DIRECTIVE */ && p.name === 'slot';\n}\nfunction isTemplateNode(node) {\n    return (node.type === 1 /* ELEMENT */ && node.tagType === 3 /* TEMPLATE */);\n}\nfunction isSlotOutlet(node) {\n    return node.type === 1 /* ELEMENT */ && node.tagType === 2 /* SLOT */;\n}\nfunction getVNodeHelper(ssr, isComponent) {\n    return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\n}\nfunction getVNodeBlockHelper(ssr, isComponent) {\n    return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\n}\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getUnnormalizedProps(props, callPath = []) {\n    if (props &&\n        !isString(props) &&\n        props.type === 14 /* JS_CALL_EXPRESSION */) {\n        const callee = props.callee;\n        if (!isString(callee) && propsHelperSet.has(callee)) {\n            return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\n        }\n    }\n    return [props, callPath];\n}\nfunction injectProp(node, prop, context) {\n    let propsWithInjection;\n    /**\n     * 1. mergeProps(...)\n     * 2. toHandlers(...)\n     * 3. normalizeProps(...)\n     * 4. normalizeProps(guardReactiveProps(...))\n     *\n     * we need to get the real props before normalization\n     */\n    let props = node.type === 13 /* VNODE_CALL */ ? node.props : node.arguments[2];\n    let callPath = [];\n    let parentCall;\n    if (props &&\n        !isString(props) &&\n        props.type === 14 /* JS_CALL_EXPRESSION */) {\n        const ret = getUnnormalizedProps(props);\n        props = ret[0];\n        callPath = ret[1];\n        parentCall = callPath[callPath.length - 1];\n    }\n    if (props == null || isString(props)) {\n        propsWithInjection = createObjectExpression([prop]);\n    }\n    else if (props.type === 14 /* JS_CALL_EXPRESSION */) {\n        // merged props... add ours\n        // only inject key to object literal if it's the first argument so that\n        // if doesn't override user provided keys\n        const first = props.arguments[0];\n        if (!isString(first) && first.type === 15 /* JS_OBJECT_EXPRESSION */) {\n            first.properties.unshift(prop);\n        }\n        else {\n            if (props.callee === TO_HANDLERS) {\n                // #2366\n                propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n                    createObjectExpression([prop]),\n                    props\n                ]);\n            }\n            else {\n                props.arguments.unshift(createObjectExpression([prop]));\n            }\n        }\n        !propsWithInjection && (propsWithInjection = props);\n    }\n    else if (props.type === 15 /* JS_OBJECT_EXPRESSION */) {\n        let alreadyExists = false;\n        // check existing key to avoid overriding user provided keys\n        if (prop.key.type === 4 /* SIMPLE_EXPRESSION */) {\n            const propKeyName = prop.key.content;\n            alreadyExists = props.properties.some(p => p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\n                p.key.content === propKeyName);\n        }\n        if (!alreadyExists) {\n            props.properties.unshift(prop);\n        }\n        propsWithInjection = props;\n    }\n    else {\n        // single v-bind with expression, return a merged replacement\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n            createObjectExpression([prop]),\n            props\n        ]);\n        // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\n        // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\n        // the `guardReactiveProps` will no longer be needed\n        if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n            parentCall = callPath[callPath.length - 2];\n        }\n    }\n    if (node.type === 13 /* VNODE_CALL */) {\n        if (parentCall) {\n            parentCall.arguments[0] = propsWithInjection;\n        }\n        else {\n            node.props = propsWithInjection;\n        }\n    }\n    else {\n        if (parentCall) {\n            parentCall.arguments[0] = propsWithInjection;\n        }\n        else {\n            node.arguments[2] = propsWithInjection;\n        }\n    }\n}\nfunction toValidAssetId(name, type) {\n    // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\n    return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n        return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString();\n    })}`;\n}\n// Check if a node contains expressions that reference current context scope ids\nfunction hasScopeRef(node, ids) {\n    if (!node || Object.keys(ids).length === 0) {\n        return false;\n    }\n    switch (node.type) {\n        case 1 /* ELEMENT */:\n            for (let i = 0; i < node.props.length; i++) {\n                const p = node.props[i];\n                if (p.type === 7 /* DIRECTIVE */ &&\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\n                    return true;\n                }\n            }\n            return node.children.some(c => hasScopeRef(c, ids));\n        case 11 /* FOR */:\n            if (hasScopeRef(node.source, ids)) {\n                return true;\n            }\n            return node.children.some(c => hasScopeRef(c, ids));\n        case 9 /* IF */:\n            return node.branches.some(b => hasScopeRef(b, ids));\n        case 10 /* IF_BRANCH */:\n            if (hasScopeRef(node.condition, ids)) {\n                return true;\n            }\n            return node.children.some(c => hasScopeRef(c, ids));\n        case 4 /* SIMPLE_EXPRESSION */:\n            return (!node.isStatic &&\n                isSimpleIdentifier(node.content) &&\n                !!ids[node.content]);\n        case 8 /* COMPOUND_EXPRESSION */:\n            return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\n        case 5 /* INTERPOLATION */:\n        case 12 /* TEXT_CALL */:\n            return hasScopeRef(node.content, ids);\n        case 2 /* TEXT */:\n        case 3 /* COMMENT */:\n            return false;\n        default:\n            if ((process.env.NODE_ENV !== 'production')) ;\n            return false;\n    }\n}\nfunction getMemoedVNodeCall(node) {\n    if (node.type === 14 /* JS_CALL_EXPRESSION */ && node.callee === WITH_MEMO) {\n        return node.arguments[1].returns;\n    }\n    else {\n        return node;\n    }\n}\nfunction makeBlock(node, { helper, removeHelper, inSSR }) {\n    if (!node.isBlock) {\n        node.isBlock = true;\n        removeHelper(getVNodeHelper(inSSR, node.isComponent));\n        helper(OPEN_BLOCK);\n        helper(getVNodeBlockHelper(inSSR, node.isComponent));\n    }\n}\n\nconst deprecationData = {\n    [\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */]: {\n        message: `Platform-native elements with \"is\" prop will no longer be ` +\n            `treated as components in Vue 3 unless the \"is\" value is explicitly ` +\n            `prefixed with \"vue:\".`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\n    },\n    [\"COMPILER_V_BIND_SYNC\" /* COMPILER_V_BIND_SYNC */]: {\n        message: key => `.sync modifier for v-bind has been removed. Use v-model with ` +\n            `argument instead. \\`v-bind:${key}.sync\\` should be changed to ` +\n            `\\`v-model:${key}\\`.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\n    },\n    [\"COMPILER_V_BIND_PROP\" /* COMPILER_V_BIND_PROP */]: {\n        message: `.prop modifier for v-bind has been removed and no longer necessary. ` +\n            `Vue 3 will automatically set a binding as DOM property when appropriate.`\n    },\n    [\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */]: {\n        message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript ` +\n            `object spread: it will now overwrite an existing non-mergeable attribute ` +\n            `that appears before v-bind in the case of conflict. ` +\n            `To retain 2.x behavior, move v-bind to make it the first attribute. ` +\n            `You can also suppress this warning if the usage is intended.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\n    },\n    [\"COMPILER_V_ON_NATIVE\" /* COMPILER_V_ON_NATIVE */]: {\n        message: `.native modifier for v-on has been removed as is no longer necessary.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\n    },\n    [\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */]: {\n        message: `v-if / v-for precedence when used on the same element has changed ` +\n            `in Vue 3: v-if now takes higher precedence and will no longer have ` +\n            `access to v-for scope variables. It is best to avoid the ambiguity ` +\n            `with <template> tags or use a computed property that filters v-for ` +\n            `data source.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\n    },\n    [\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */]: {\n        message: `<template> with no special directives will render as a native template ` +\n            `element instead of its inner content in Vue 3.`\n    },\n    [\"COMPILER_INLINE_TEMPLATE\" /* COMPILER_INLINE_TEMPLATE */]: {\n        message: `\"inline-template\" has been removed in Vue 3.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\n    },\n    [\"COMPILER_FILTER\" /* COMPILER_FILTERS */]: {\n        message: `filters have been removed in Vue 3. ` +\n            `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\n            `Use method calls or computed properties instead.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\n    }\n};\nfunction getCompatValue(key, context) {\n    const config = context.options\n        ? context.options.compatConfig\n        : context.compatConfig;\n    const value = config && config[key];\n    if (key === 'MODE') {\n        return value || 3; // compiler defaults to v3 behavior\n    }\n    else {\n        return value;\n    }\n}\nfunction isCompatEnabled(key, context) {\n    const mode = getCompatValue('MODE', context);\n    const value = getCompatValue(key, context);\n    // in v3 mode, only enable if explicitly set to true\n    // otherwise enable for any non-false value\n    return mode === 3 ? value === true : value !== false;\n}\nfunction checkCompatEnabled(key, context, loc, ...args) {\n    const enabled = isCompatEnabled(key, context);\n    if ((process.env.NODE_ENV !== 'production') && enabled) {\n        warnDeprecation(key, context, loc, ...args);\n    }\n    return enabled;\n}\nfunction warnDeprecation(key, context, loc, ...args) {\n    const val = getCompatValue(key, context);\n    if (val === 'suppress-warning') {\n        return;\n    }\n    const { message, link } = deprecationData[key];\n    const msg = `(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`;\n    const err = new SyntaxError(msg);\n    err.code = key;\n    if (loc)\n        err.loc = loc;\n    context.onWarn(err);\n}\n\n// The default decoder only provides escapes for characters reserved as part of\n// the template syntax, and is only used if the custom renderer did not provide\n// a platform-specific decoder.\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\nconst decodeMap = {\n    gt: '>',\n    lt: '<',\n    amp: '&',\n    apos: \"'\",\n    quot: '\"'\n};\nconst defaultParserOptions = {\n    delimiters: [`{{`, `}}`],\n    getNamespace: () => 0 /* HTML */,\n    getTextMode: () => 0 /* DATA */,\n    isVoidTag: NO,\n    isPreTag: NO,\n    isCustomElement: NO,\n    decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\n    onError: defaultOnError,\n    onWarn: defaultOnWarn,\n    comments: (process.env.NODE_ENV !== 'production')\n};\nfunction baseParse(content, options = {}) {\n    const context = createParserContext(content, options);\n    const start = getCursor(context);\n    return createRoot(parseChildren(context, 0 /* DATA */, []), getSelection(context, start));\n}\nfunction createParserContext(content, rawOptions) {\n    const options = extend({}, defaultParserOptions);\n    let key;\n    for (key in rawOptions) {\n        // @ts-ignore\n        options[key] =\n            rawOptions[key] === undefined\n                ? defaultParserOptions[key]\n                : rawOptions[key];\n    }\n    return {\n        options,\n        column: 1,\n        line: 1,\n        offset: 0,\n        originalSource: content,\n        source: content,\n        inPre: false,\n        inVPre: false,\n        onWarn: options.onWarn\n    };\n}\nfunction parseChildren(context, mode, ancestors) {\n    const parent = last(ancestors);\n    const ns = parent ? parent.ns : 0 /* HTML */;\n    const nodes = [];\n    while (!isEnd(context, mode, ancestors)) {\n        const s = context.source;\n        let node = undefined;\n        if (mode === 0 /* DATA */ || mode === 1 /* RCDATA */) {\n            if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\n                // '{{'\n                node = parseInterpolation(context, mode);\n            }\n            else if (mode === 0 /* DATA */ && s[0] === '<') {\n                // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\n                if (s.length === 1) {\n                    emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 1);\n                }\n                else if (s[1] === '!') {\n                    // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\n                    if (startsWith(s, '<!--')) {\n                        node = parseComment(context);\n                    }\n                    else if (startsWith(s, '<!DOCTYPE')) {\n                        // Ignore DOCTYPE by a limitation.\n                        node = parseBogusComment(context);\n                    }\n                    else if (startsWith(s, '<![CDATA[')) {\n                        if (ns !== 0 /* HTML */) {\n                            node = parseCDATA(context, ancestors);\n                        }\n                        else {\n                            emitError(context, 1 /* CDATA_IN_HTML_CONTENT */);\n                            node = parseBogusComment(context);\n                        }\n                    }\n                    else {\n                        emitError(context, 11 /* INCORRECTLY_OPENED_COMMENT */);\n                        node = parseBogusComment(context);\n                    }\n                }\n                else if (s[1] === '/') {\n                    // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\n                    if (s.length === 2) {\n                        emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 2);\n                    }\n                    else if (s[2] === '>') {\n                        emitError(context, 14 /* MISSING_END_TAG_NAME */, 2);\n                        advanceBy(context, 3);\n                        continue;\n                    }\n                    else if (/[a-z]/i.test(s[2])) {\n                        emitError(context, 23 /* X_INVALID_END_TAG */);\n                        parseTag(context, 1 /* End */, parent);\n                        continue;\n                    }\n                    else {\n                        emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\n                        node = parseBogusComment(context);\n                    }\n                }\n                else if (/[a-z]/i.test(s[1])) {\n                    node = parseElement(context, ancestors);\n                    // 2.x <template> with no directive compat\n                    if (isCompatEnabled(\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */, context) &&\n                        node &&\n                        node.tag === 'template' &&\n                        !node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\n                            isSpecialTemplateDirective(p.name))) {\n                        (process.env.NODE_ENV !== 'production') &&\n                            warnDeprecation(\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */, context, node.loc);\n                        node = node.children;\n                    }\n                }\n                else if (s[1] === '?') {\n                    emitError(context, 21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\n                    node = parseBogusComment(context);\n                }\n                else {\n                    emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\n                }\n            }\n        }\n        if (!node) {\n            node = parseText(context, mode);\n        }\n        if (isArray(node)) {\n            for (let i = 0; i < node.length; i++) {\n                pushNode(nodes, node[i]);\n            }\n        }\n        else {\n            pushNode(nodes, node);\n        }\n    }\n    // Whitespace handling strategy like v2\n    let removedWhitespace = false;\n    if (mode !== 2 /* RAWTEXT */ && mode !== 1 /* RCDATA */) {\n        const shouldCondense = context.options.whitespace !== 'preserve';\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (!context.inPre && node.type === 2 /* TEXT */) {\n                if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\n                    const prev = nodes[i - 1];\n                    const next = nodes[i + 1];\n                    // Remove if:\n                    // - the whitespace is the first or last node, or:\n                    // - (condense mode) the whitespace is adjacent to a comment, or:\n                    // - (condense mode) the whitespace is between two elements AND contains newline\n                    if (!prev ||\n                        !next ||\n                        (shouldCondense &&\n                            (prev.type === 3 /* COMMENT */ ||\n                                next.type === 3 /* COMMENT */ ||\n                                (prev.type === 1 /* ELEMENT */ &&\n                                    next.type === 1 /* ELEMENT */ &&\n                                    /[\\r\\n]/.test(node.content))))) {\n                        removedWhitespace = true;\n                        nodes[i] = null;\n                    }\n                    else {\n                        // Otherwise, the whitespace is condensed into a single space\n                        node.content = ' ';\n                    }\n                }\n                else if (shouldCondense) {\n                    // in condense mode, consecutive whitespaces in text are condensed\n                    // down to a single space.\n                    node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\n                }\n            }\n            // Remove comment nodes if desired by configuration.\n            else if (node.type === 3 /* COMMENT */ && !context.options.comments) {\n                removedWhitespace = true;\n                nodes[i] = null;\n            }\n        }\n        if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\n            // remove leading newline per html spec\n            // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\n            const first = nodes[0];\n            if (first && first.type === 2 /* TEXT */) {\n                first.content = first.content.replace(/^\\r?\\n/, '');\n            }\n        }\n    }\n    return removedWhitespace ? nodes.filter(Boolean) : nodes;\n}\nfunction pushNode(nodes, node) {\n    if (node.type === 2 /* TEXT */) {\n        const prev = last(nodes);\n        // Merge if both this and the previous node are text and those are\n        // consecutive. This happens for cases like \"a < b\".\n        if (prev &&\n            prev.type === 2 /* TEXT */ &&\n            prev.loc.end.offset === node.loc.start.offset) {\n            prev.content += node.content;\n            prev.loc.end = node.loc.end;\n            prev.loc.source += node.loc.source;\n            return;\n        }\n    }\n    nodes.push(node);\n}\nfunction parseCDATA(context, ancestors) {\n    advanceBy(context, 9);\n    const nodes = parseChildren(context, 3 /* CDATA */, ancestors);\n    if (context.source.length === 0) {\n        emitError(context, 6 /* EOF_IN_CDATA */);\n    }\n    else {\n        advanceBy(context, 3);\n    }\n    return nodes;\n}\nfunction parseComment(context) {\n    const start = getCursor(context);\n    let content;\n    // Regular comment.\n    const match = /--(\\!)?>/.exec(context.source);\n    if (!match) {\n        content = context.source.slice(4);\n        advanceBy(context, context.source.length);\n        emitError(context, 7 /* EOF_IN_COMMENT */);\n    }\n    else {\n        if (match.index <= 3) {\n            emitError(context, 0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\n        }\n        if (match[1]) {\n            emitError(context, 10 /* INCORRECTLY_CLOSED_COMMENT */);\n        }\n        content = context.source.slice(4, match.index);\n        // Advancing with reporting nested comments.\n        const s = context.source.slice(0, match.index);\n        let prevIndex = 1, nestedIndex = 0;\n        while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\n            advanceBy(context, nestedIndex - prevIndex + 1);\n            if (nestedIndex + 4 < s.length) {\n                emitError(context, 16 /* NESTED_COMMENT */);\n            }\n            prevIndex = nestedIndex + 1;\n        }\n        advanceBy(context, match.index + match[0].length - prevIndex + 1);\n    }\n    return {\n        type: 3 /* COMMENT */,\n        content,\n        loc: getSelection(context, start)\n    };\n}\nfunction parseBogusComment(context) {\n    const start = getCursor(context);\n    const contentStart = context.source[1] === '?' ? 1 : 2;\n    let content;\n    const closeIndex = context.source.indexOf('>');\n    if (closeIndex === -1) {\n        content = context.source.slice(contentStart);\n        advanceBy(context, context.source.length);\n    }\n    else {\n        content = context.source.slice(contentStart, closeIndex);\n        advanceBy(context, closeIndex + 1);\n    }\n    return {\n        type: 3 /* COMMENT */,\n        content,\n        loc: getSelection(context, start)\n    };\n}\nfunction parseElement(context, ancestors) {\n    // Start tag.\n    const wasInPre = context.inPre;\n    const wasInVPre = context.inVPre;\n    const parent = last(ancestors);\n    const element = parseTag(context, 0 /* Start */, parent);\n    const isPreBoundary = context.inPre && !wasInPre;\n    const isVPreBoundary = context.inVPre && !wasInVPre;\n    if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\n        // #4030 self-closing <pre> tag\n        if (isPreBoundary) {\n            context.inPre = false;\n        }\n        if (isVPreBoundary) {\n            context.inVPre = false;\n        }\n        return element;\n    }\n    // Children.\n    ancestors.push(element);\n    const mode = context.options.getTextMode(element, parent);\n    const children = parseChildren(context, mode, ancestors);\n    ancestors.pop();\n    // 2.x inline-template compat\n    {\n        const inlineTemplateProp = element.props.find(p => p.type === 6 /* ATTRIBUTE */ && p.name === 'inline-template');\n        if (inlineTemplateProp &&\n            checkCompatEnabled(\"COMPILER_INLINE_TEMPLATE\" /* COMPILER_INLINE_TEMPLATE */, context, inlineTemplateProp.loc)) {\n            const loc = getSelection(context, element.loc.end);\n            inlineTemplateProp.value = {\n                type: 2 /* TEXT */,\n                content: loc.source,\n                loc\n            };\n        }\n    }\n    element.children = children;\n    // End tag.\n    if (startsWithEndTagOpen(context.source, element.tag)) {\n        parseTag(context, 1 /* End */, parent);\n    }\n    else {\n        emitError(context, 24 /* X_MISSING_END_TAG */, 0, element.loc.start);\n        if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\n            const first = children[0];\n            if (first && startsWith(first.loc.source, '<!--')) {\n                emitError(context, 8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\n            }\n        }\n    }\n    element.loc = getSelection(context, element.loc.start);\n    if (isPreBoundary) {\n        context.inPre = false;\n    }\n    if (isVPreBoundary) {\n        context.inVPre = false;\n    }\n    return element;\n}\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(`if,else,else-if,for,slot`);\nfunction parseTag(context, type, parent) {\n    // Tag open.\n    const start = getCursor(context);\n    const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\n    const tag = match[1];\n    const ns = context.options.getNamespace(tag, parent);\n    advanceBy(context, match[0].length);\n    advanceSpaces(context);\n    // save current state in case we need to re-parse attributes with v-pre\n    const cursor = getCursor(context);\n    const currentSource = context.source;\n    // check <pre> tag\n    if (context.options.isPreTag(tag)) {\n        context.inPre = true;\n    }\n    // Attributes.\n    let props = parseAttributes(context, type);\n    // check v-pre\n    if (type === 0 /* Start */ &&\n        !context.inVPre &&\n        props.some(p => p.type === 7 /* DIRECTIVE */ && p.name === 'pre')) {\n        context.inVPre = true;\n        // reset context\n        extend(context, cursor);\n        context.source = currentSource;\n        // re-parse attrs and filter out v-pre itself\n        props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\n    }\n    // Tag close.\n    let isSelfClosing = false;\n    if (context.source.length === 0) {\n        emitError(context, 9 /* EOF_IN_TAG */);\n    }\n    else {\n        isSelfClosing = startsWith(context.source, '/>');\n        if (type === 1 /* End */ && isSelfClosing) {\n            emitError(context, 4 /* END_TAG_WITH_TRAILING_SOLIDUS */);\n        }\n        advanceBy(context, isSelfClosing ? 2 : 1);\n    }\n    if (type === 1 /* End */) {\n        return;\n    }\n    // 2.x deprecation checks\n    if ((process.env.NODE_ENV !== 'production') &&\n        isCompatEnabled(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */, context)) {\n        let hasIf = false;\n        let hasFor = false;\n        for (let i = 0; i < props.length; i++) {\n            const p = props[i];\n            if (p.type === 7 /* DIRECTIVE */) {\n                if (p.name === 'if') {\n                    hasIf = true;\n                }\n                else if (p.name === 'for') {\n                    hasFor = true;\n                }\n            }\n            if (hasIf && hasFor) {\n                warnDeprecation(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */, context, getSelection(context, start));\n                break;\n            }\n        }\n    }\n    let tagType = 0 /* ELEMENT */;\n    if (!context.inVPre) {\n        if (tag === 'slot') {\n            tagType = 2 /* SLOT */;\n        }\n        else if (tag === 'template') {\n            if (props.some(p => p.type === 7 /* DIRECTIVE */ && isSpecialTemplateDirective(p.name))) {\n                tagType = 3 /* TEMPLATE */;\n            }\n        }\n        else if (isComponent(tag, props, context)) {\n            tagType = 1 /* COMPONENT */;\n        }\n    }\n    return {\n        type: 1 /* ELEMENT */,\n        ns,\n        tag,\n        tagType,\n        props,\n        isSelfClosing,\n        children: [],\n        loc: getSelection(context, start),\n        codegenNode: undefined // to be created during transform phase\n    };\n}\nfunction isComponent(tag, props, context) {\n    const options = context.options;\n    if (options.isCustomElement(tag)) {\n        return false;\n    }\n    if (tag === 'component' ||\n        /^[A-Z]/.test(tag) ||\n        isCoreComponent(tag) ||\n        (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\n        (options.isNativeTag && !options.isNativeTag(tag))) {\n        return true;\n    }\n    // at this point the tag should be a native tag, but check for potential \"is\"\n    // casting\n    for (let i = 0; i < props.length; i++) {\n        const p = props[i];\n        if (p.type === 6 /* ATTRIBUTE */) {\n            if (p.name === 'is' && p.value) {\n                if (p.value.content.startsWith('vue:')) {\n                    return true;\n                }\n                else if (checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\n                    return true;\n                }\n            }\n        }\n        else {\n            // directive\n            // v-is (TODO Deprecate)\n            if (p.name === 'is') {\n                return true;\n            }\n            else if (\n            // :is on plain element - only treat as component in compat mode\n            p.name === 'bind' &&\n                isStaticArgOf(p.arg, 'is') &&\n                true &&\n                checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\n                return true;\n            }\n        }\n    }\n}\nfunction parseAttributes(context, type) {\n    const props = [];\n    const attributeNames = new Set();\n    while (context.source.length > 0 &&\n        !startsWith(context.source, '>') &&\n        !startsWith(context.source, '/>')) {\n        if (startsWith(context.source, '/')) {\n            emitError(context, 22 /* UNEXPECTED_SOLIDUS_IN_TAG */);\n            advanceBy(context, 1);\n            advanceSpaces(context);\n            continue;\n        }\n        if (type === 1 /* End */) {\n            emitError(context, 3 /* END_TAG_WITH_ATTRIBUTES */);\n        }\n        const attr = parseAttribute(context, attributeNames);\n        // Trim whitespace between class\n        // https://github.com/vuejs/core/issues/4251\n        if (attr.type === 6 /* ATTRIBUTE */ &&\n            attr.value &&\n            attr.name === 'class') {\n            attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim();\n        }\n        if (type === 0 /* Start */) {\n            props.push(attr);\n        }\n        if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\n            emitError(context, 15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\n        }\n        advanceSpaces(context);\n    }\n    return props;\n}\nfunction parseAttribute(context, nameSet) {\n    // Name.\n    const start = getCursor(context);\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\n    const name = match[0];\n    if (nameSet.has(name)) {\n        emitError(context, 2 /* DUPLICATE_ATTRIBUTE */);\n    }\n    nameSet.add(name);\n    if (name[0] === '=') {\n        emitError(context, 19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\n    }\n    {\n        const pattern = /[\"'<]/g;\n        let m;\n        while ((m = pattern.exec(name))) {\n            emitError(context, 17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\n        }\n    }\n    advanceBy(context, name.length);\n    // Value\n    let value = undefined;\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\n        advanceSpaces(context);\n        advanceBy(context, 1);\n        advanceSpaces(context);\n        value = parseAttributeValue(context);\n        if (!value) {\n            emitError(context, 13 /* MISSING_ATTRIBUTE_VALUE */);\n        }\n    }\n    const loc = getSelection(context, start);\n    if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\n        const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\n        let isPropShorthand = startsWith(name, '.');\n        let dirName = match[1] ||\n            (isPropShorthand || startsWith(name, ':')\n                ? 'bind'\n                : startsWith(name, '@')\n                    ? 'on'\n                    : 'slot');\n        let arg;\n        if (match[2]) {\n            const isSlot = dirName === 'slot';\n            const startOffset = name.lastIndexOf(match[2]);\n            const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + ((isSlot && match[3]) || '').length));\n            let content = match[2];\n            let isStatic = true;\n            if (content.startsWith('[')) {\n                isStatic = false;\n                if (!content.endsWith(']')) {\n                    emitError(context, 27 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\n                    content = content.slice(1);\n                }\n                else {\n                    content = content.slice(1, content.length - 1);\n                }\n            }\n            else if (isSlot) {\n                // #1241 special case for v-slot: vuetify relies extensively on slot\n                // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\n                // supports such usage so we are keeping it consistent with 2.x.\n                content += match[3] || '';\n            }\n            arg = {\n                type: 4 /* SIMPLE_EXPRESSION */,\n                content,\n                isStatic,\n                constType: isStatic\n                    ? 3 /* CAN_STRINGIFY */\n                    : 0 /* NOT_CONSTANT */,\n                loc\n            };\n        }\n        if (value && value.isQuoted) {\n            const valueLoc = value.loc;\n            valueLoc.start.offset++;\n            valueLoc.start.column++;\n            valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\n            valueLoc.source = valueLoc.source.slice(1, -1);\n        }\n        const modifiers = match[3] ? match[3].slice(1).split('.') : [];\n        if (isPropShorthand)\n            modifiers.push('prop');\n        // 2.x compat v-bind:foo.sync -> v-model:foo\n        if (dirName === 'bind' && arg) {\n            if (modifiers.includes('sync') &&\n                checkCompatEnabled(\"COMPILER_V_BIND_SYNC\" /* COMPILER_V_BIND_SYNC */, context, loc, arg.loc.source)) {\n                dirName = 'model';\n                modifiers.splice(modifiers.indexOf('sync'), 1);\n            }\n            if ((process.env.NODE_ENV !== 'production') && modifiers.includes('prop')) {\n                checkCompatEnabled(\"COMPILER_V_BIND_PROP\" /* COMPILER_V_BIND_PROP */, context, loc);\n            }\n        }\n        return {\n            type: 7 /* DIRECTIVE */,\n            name: dirName,\n            exp: value && {\n                type: 4 /* SIMPLE_EXPRESSION */,\n                content: value.content,\n                isStatic: false,\n                // Treat as non-constant by default. This can be potentially set to\n                // other values by `transformExpression` to make it eligible for hoisting.\n                constType: 0 /* NOT_CONSTANT */,\n                loc: value.loc\n            },\n            arg,\n            modifiers,\n            loc\n        };\n    }\n    // missing directive name or illegal directive name\n    if (!context.inVPre && startsWith(name, 'v-')) {\n        emitError(context, 26 /* X_MISSING_DIRECTIVE_NAME */);\n    }\n    return {\n        type: 6 /* ATTRIBUTE */,\n        name,\n        value: value && {\n            type: 2 /* TEXT */,\n            content: value.content,\n            loc: value.loc\n        },\n        loc\n    };\n}\nfunction parseAttributeValue(context) {\n    const start = getCursor(context);\n    let content;\n    const quote = context.source[0];\n    const isQuoted = quote === `\"` || quote === `'`;\n    if (isQuoted) {\n        // Quoted value.\n        advanceBy(context, 1);\n        const endIndex = context.source.indexOf(quote);\n        if (endIndex === -1) {\n            content = parseTextData(context, context.source.length, 4 /* ATTRIBUTE_VALUE */);\n        }\n        else {\n            content = parseTextData(context, endIndex, 4 /* ATTRIBUTE_VALUE */);\n            advanceBy(context, 1);\n        }\n    }\n    else {\n        // Unquoted\n        const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\n        if (!match) {\n            return undefined;\n        }\n        const unexpectedChars = /[\"'<=`]/g;\n        let m;\n        while ((m = unexpectedChars.exec(match[0]))) {\n            emitError(context, 18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\n        }\n        content = parseTextData(context, match[0].length, 4 /* ATTRIBUTE_VALUE */);\n    }\n    return { content, isQuoted, loc: getSelection(context, start) };\n}\nfunction parseInterpolation(context, mode) {\n    const [open, close] = context.options.delimiters;\n    const closeIndex = context.source.indexOf(close, open.length);\n    if (closeIndex === -1) {\n        emitError(context, 25 /* X_MISSING_INTERPOLATION_END */);\n        return undefined;\n    }\n    const start = getCursor(context);\n    advanceBy(context, open.length);\n    const innerStart = getCursor(context);\n    const innerEnd = getCursor(context);\n    const rawContentLength = closeIndex - open.length;\n    const rawContent = context.source.slice(0, rawContentLength);\n    const preTrimContent = parseTextData(context, rawContentLength, mode);\n    const content = preTrimContent.trim();\n    const startOffset = preTrimContent.indexOf(content);\n    if (startOffset > 0) {\n        advancePositionWithMutation(innerStart, rawContent, startOffset);\n    }\n    const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\n    advancePositionWithMutation(innerEnd, rawContent, endOffset);\n    advanceBy(context, close.length);\n    return {\n        type: 5 /* INTERPOLATION */,\n        content: {\n            type: 4 /* SIMPLE_EXPRESSION */,\n            isStatic: false,\n            // Set `isConstant` to false by default and will decide in transformExpression\n            constType: 0 /* NOT_CONSTANT */,\n            content,\n            loc: getSelection(context, innerStart, innerEnd)\n        },\n        loc: getSelection(context, start)\n    };\n}\nfunction parseText(context, mode) {\n    const endTokens = mode === 3 /* CDATA */ ? [']]>'] : ['<', context.options.delimiters[0]];\n    let endIndex = context.source.length;\n    for (let i = 0; i < endTokens.length; i++) {\n        const index = context.source.indexOf(endTokens[i], 1);\n        if (index !== -1 && endIndex > index) {\n            endIndex = index;\n        }\n    }\n    const start = getCursor(context);\n    const content = parseTextData(context, endIndex, mode);\n    return {\n        type: 2 /* TEXT */,\n        content,\n        loc: getSelection(context, start)\n    };\n}\n/**\n * Get text data with a given length from the current location.\n * This translates HTML entities in the text data.\n */\nfunction parseTextData(context, length, mode) {\n    const rawText = context.source.slice(0, length);\n    advanceBy(context, length);\n    if (mode === 2 /* RAWTEXT */ ||\n        mode === 3 /* CDATA */ ||\n        !rawText.includes('&')) {\n        return rawText;\n    }\n    else {\n        // DATA or RCDATA containing \"&\"\". Entity decoding required.\n        return context.options.decodeEntities(rawText, mode === 4 /* ATTRIBUTE_VALUE */);\n    }\n}\nfunction getCursor(context) {\n    const { column, line, offset } = context;\n    return { column, line, offset };\n}\nfunction getSelection(context, start, end) {\n    end = end || getCursor(context);\n    return {\n        start,\n        end,\n        source: context.originalSource.slice(start.offset, end.offset)\n    };\n}\nfunction last(xs) {\n    return xs[xs.length - 1];\n}\nfunction startsWith(source, searchString) {\n    return source.startsWith(searchString);\n}\nfunction advanceBy(context, numberOfCharacters) {\n    const { source } = context;\n    advancePositionWithMutation(context, source, numberOfCharacters);\n    context.source = source.slice(numberOfCharacters);\n}\nfunction advanceSpaces(context) {\n    const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\n    if (match) {\n        advanceBy(context, match[0].length);\n    }\n}\nfunction getNewPosition(context, start, numberOfCharacters) {\n    return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\n}\nfunction emitError(context, code, offset, loc = getCursor(context)) {\n    if (offset) {\n        loc.offset += offset;\n        loc.column += offset;\n    }\n    context.options.onError(createCompilerError(code, {\n        start: loc,\n        end: loc,\n        source: ''\n    }));\n}\nfunction isEnd(context, mode, ancestors) {\n    const s = context.source;\n    switch (mode) {\n        case 0 /* DATA */:\n            if (startsWith(s, '</')) {\n                // TODO: probably bad performance\n                for (let i = ancestors.length - 1; i >= 0; --i) {\n                    if (startsWithEndTagOpen(s, ancestors[i].tag)) {\n                        return true;\n                    }\n                }\n            }\n            break;\n        case 1 /* RCDATA */:\n        case 2 /* RAWTEXT */: {\n            const parent = last(ancestors);\n            if (parent && startsWithEndTagOpen(s, parent.tag)) {\n                return true;\n            }\n            break;\n        }\n        case 3 /* CDATA */:\n            if (startsWith(s, ']]>')) {\n                return true;\n            }\n            break;\n    }\n    return !s;\n}\nfunction startsWithEndTagOpen(source, tag) {\n    return (startsWith(source, '</') &&\n        source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() &&\n        /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>'));\n}\n\nfunction hoistStatic(root, context) {\n    walk(root, context, \n    // Root node is unfortunately non-hoistable due to potential parent\n    // fallthrough attributes.\n    isSingleElementRoot(root, root.children[0]));\n}\nfunction isSingleElementRoot(root, child) {\n    const { children } = root;\n    return (children.length === 1 &&\n        child.type === 1 /* ELEMENT */ &&\n        !isSlotOutlet(child));\n}\nfunction walk(node, context, doNotHoistNode = false) {\n    const { children } = node;\n    const originalCount = children.length;\n    let hoistedCount = 0;\n    for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        // only plain elements & text calls are eligible for hoisting.\n        if (child.type === 1 /* ELEMENT */ &&\n            child.tagType === 0 /* ELEMENT */) {\n            const constantType = doNotHoistNode\n                ? 0 /* NOT_CONSTANT */\n                : getConstantType(child, context);\n            if (constantType > 0 /* NOT_CONSTANT */) {\n                if (constantType >= 2 /* CAN_HOIST */) {\n                    child.codegenNode.patchFlag =\n                        -1 /* HOISTED */ + ((process.env.NODE_ENV !== 'production') ? ` /* HOISTED */` : ``);\n                    child.codegenNode = context.hoist(child.codegenNode);\n                    hoistedCount++;\n                    continue;\n                }\n            }\n            else {\n                // node may contain dynamic children, but its props may be eligible for\n                // hoisting.\n                const codegenNode = child.codegenNode;\n                if (codegenNode.type === 13 /* VNODE_CALL */) {\n                    const flag = getPatchFlag(codegenNode);\n                    if ((!flag ||\n                        flag === 512 /* NEED_PATCH */ ||\n                        flag === 1 /* TEXT */) &&\n                        getGeneratedPropsConstantType(child, context) >=\n                            2 /* CAN_HOIST */) {\n                        const props = getNodeProps(child);\n                        if (props) {\n                            codegenNode.props = context.hoist(props);\n                        }\n                    }\n                    if (codegenNode.dynamicProps) {\n                        codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\n                    }\n                }\n            }\n        }\n        else if (child.type === 12 /* TEXT_CALL */ &&\n            getConstantType(child.content, context) >= 2 /* CAN_HOIST */) {\n            child.codegenNode = context.hoist(child.codegenNode);\n            hoistedCount++;\n        }\n        // walk further\n        if (child.type === 1 /* ELEMENT */) {\n            const isComponent = child.tagType === 1 /* COMPONENT */;\n            if (isComponent) {\n                context.scopes.vSlot++;\n            }\n            walk(child, context);\n            if (isComponent) {\n                context.scopes.vSlot--;\n            }\n        }\n        else if (child.type === 11 /* FOR */) {\n            // Do not hoist v-for single child because it has to be a block\n            walk(child, context, child.children.length === 1);\n        }\n        else if (child.type === 9 /* IF */) {\n            for (let i = 0; i < child.branches.length; i++) {\n                // Do not hoist v-if single child because it has to be a block\n                walk(child.branches[i], context, child.branches[i].children.length === 1);\n            }\n        }\n    }\n    if (hoistedCount && context.transformHoist) {\n        context.transformHoist(children, context, node);\n    }\n    // all children were hoisted - the entire children array is hoistable.\n    if (hoistedCount &&\n        hoistedCount === originalCount &&\n        node.type === 1 /* ELEMENT */ &&\n        node.tagType === 0 /* ELEMENT */ &&\n        node.codegenNode &&\n        node.codegenNode.type === 13 /* VNODE_CALL */ &&\n        isArray(node.codegenNode.children)) {\n        node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));\n    }\n}\nfunction getConstantType(node, context) {\n    const { constantCache } = context;\n    switch (node.type) {\n        case 1 /* ELEMENT */:\n            if (node.tagType !== 0 /* ELEMENT */) {\n                return 0 /* NOT_CONSTANT */;\n            }\n            const cached = constantCache.get(node);\n            if (cached !== undefined) {\n                return cached;\n            }\n            const codegenNode = node.codegenNode;\n            if (codegenNode.type !== 13 /* VNODE_CALL */) {\n                return 0 /* NOT_CONSTANT */;\n            }\n            if (codegenNode.isBlock &&\n                node.tag !== 'svg' &&\n                node.tag !== 'foreignObject') {\n                return 0 /* NOT_CONSTANT */;\n            }\n            const flag = getPatchFlag(codegenNode);\n            if (!flag) {\n                let returnType = 3 /* CAN_STRINGIFY */;\n                // Element itself has no patch flag. However we still need to check:\n                // 1. Even for a node with no patch flag, it is possible for it to contain\n                // non-hoistable expressions that refers to scope variables, e.g. compiler\n                // injected keys or cached event handlers. Therefore we need to always\n                // check the codegenNode's props to be sure.\n                const generatedPropsType = getGeneratedPropsConstantType(node, context);\n                if (generatedPropsType === 0 /* NOT_CONSTANT */) {\n                    constantCache.set(node, 0 /* NOT_CONSTANT */);\n                    return 0 /* NOT_CONSTANT */;\n                }\n                if (generatedPropsType < returnType) {\n                    returnType = generatedPropsType;\n                }\n                // 2. its children.\n                for (let i = 0; i < node.children.length; i++) {\n                    const childType = getConstantType(node.children[i], context);\n                    if (childType === 0 /* NOT_CONSTANT */) {\n                        constantCache.set(node, 0 /* NOT_CONSTANT */);\n                        return 0 /* NOT_CONSTANT */;\n                    }\n                    if (childType < returnType) {\n                        returnType = childType;\n                    }\n                }\n                // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\n                // type, check if any of the props can cause the type to be lowered\n                // we can skip can_patch because it's guaranteed by the absence of a\n                // patchFlag.\n                if (returnType > 1 /* CAN_SKIP_PATCH */) {\n                    for (let i = 0; i < node.props.length; i++) {\n                        const p = node.props[i];\n                        if (p.type === 7 /* DIRECTIVE */ && p.name === 'bind' && p.exp) {\n                            const expType = getConstantType(p.exp, context);\n                            if (expType === 0 /* NOT_CONSTANT */) {\n                                constantCache.set(node, 0 /* NOT_CONSTANT */);\n                                return 0 /* NOT_CONSTANT */;\n                            }\n                            if (expType < returnType) {\n                                returnType = expType;\n                            }\n                        }\n                    }\n                }\n                // only svg/foreignObject could be block here, however if they are\n                // static then they don't need to be blocks since there will be no\n                // nested updates.\n                if (codegenNode.isBlock) {\n                    // except set custom directives.\n                    for (let i = 0; i < node.props.length; i++) {\n                        const p = node.props[i];\n                        if (p.type === 7 /* DIRECTIVE */) {\n                            constantCache.set(node, 0 /* NOT_CONSTANT */);\n                            return 0 /* NOT_CONSTANT */;\n                        }\n                    }\n                    context.removeHelper(OPEN_BLOCK);\n                    context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));\n                    codegenNode.isBlock = false;\n                    context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\n                }\n                constantCache.set(node, returnType);\n                return returnType;\n            }\n            else {\n                constantCache.set(node, 0 /* NOT_CONSTANT */);\n                return 0 /* NOT_CONSTANT */;\n            }\n        case 2 /* TEXT */:\n        case 3 /* COMMENT */:\n            return 3 /* CAN_STRINGIFY */;\n        case 9 /* IF */:\n        case 11 /* FOR */:\n        case 10 /* IF_BRANCH */:\n            return 0 /* NOT_CONSTANT */;\n        case 5 /* INTERPOLATION */:\n        case 12 /* TEXT_CALL */:\n            return getConstantType(node.content, context);\n        case 4 /* SIMPLE_EXPRESSION */:\n            return node.constType;\n        case 8 /* COMPOUND_EXPRESSION */:\n            let returnType = 3 /* CAN_STRINGIFY */;\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                if (isString(child) || isSymbol(child)) {\n                    continue;\n                }\n                const childType = getConstantType(child, context);\n                if (childType === 0 /* NOT_CONSTANT */) {\n                    return 0 /* NOT_CONSTANT */;\n                }\n                else if (childType < returnType) {\n                    returnType = childType;\n                }\n            }\n            return returnType;\n        default:\n            if ((process.env.NODE_ENV !== 'production')) ;\n            return 0 /* NOT_CONSTANT */;\n    }\n}\nconst allowHoistedHelperSet = new Set([\n    NORMALIZE_CLASS,\n    NORMALIZE_STYLE,\n    NORMALIZE_PROPS,\n    GUARD_REACTIVE_PROPS\n]);\nfunction getConstantTypeOfHelperCall(value, context) {\n    if (value.type === 14 /* JS_CALL_EXPRESSION */ &&\n        !isString(value.callee) &&\n        allowHoistedHelperSet.has(value.callee)) {\n        const arg = value.arguments[0];\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\n            return getConstantType(arg, context);\n        }\n        else if (arg.type === 14 /* JS_CALL_EXPRESSION */) {\n            // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\n            return getConstantTypeOfHelperCall(arg, context);\n        }\n    }\n    return 0 /* NOT_CONSTANT */;\n}\nfunction getGeneratedPropsConstantType(node, context) {\n    let returnType = 3 /* CAN_STRINGIFY */;\n    const props = getNodeProps(node);\n    if (props && props.type === 15 /* JS_OBJECT_EXPRESSION */) {\n        const { properties } = props;\n        for (let i = 0; i < properties.length; i++) {\n            const { key, value } = properties[i];\n            const keyType = getConstantType(key, context);\n            if (keyType === 0 /* NOT_CONSTANT */) {\n                return keyType;\n            }\n            if (keyType < returnType) {\n                returnType = keyType;\n            }\n            let valueType;\n            if (value.type === 4 /* SIMPLE_EXPRESSION */) {\n                valueType = getConstantType(value, context);\n            }\n            else if (value.type === 14 /* JS_CALL_EXPRESSION */) {\n                // some helper calls can be hoisted,\n                // such as the `normalizeProps` generated by the compiler for pre-normalize class,\n                // in this case we need to respect the ConstantType of the helper's arguments\n                valueType = getConstantTypeOfHelperCall(value, context);\n            }\n            else {\n                valueType = 0 /* NOT_CONSTANT */;\n            }\n            if (valueType === 0 /* NOT_CONSTANT */) {\n                return valueType;\n            }\n            if (valueType < returnType) {\n                returnType = valueType;\n            }\n        }\n    }\n    return returnType;\n}\nfunction getNodeProps(node) {\n    const codegenNode = node.codegenNode;\n    if (codegenNode.type === 13 /* VNODE_CALL */) {\n        return codegenNode.props;\n    }\n}\nfunction getPatchFlag(node) {\n    const flag = node.patchFlag;\n    return flag ? parseInt(flag, 10) : undefined;\n}\n\nfunction createTransformContext(root, { filename = '', prefixIdentifiers = false, hoistStatic = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, isCustomElement = NOOP, expressionPlugins = [], scopeId = null, slotted = true, ssr = false, inSSR = false, ssrCssVars = ``, bindingMetadata = EMPTY_OBJ, inline = false, isTS = false, onError = defaultOnError, onWarn = defaultOnWarn, compatConfig }) {\n    const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/);\n    const context = {\n        // options\n        selfName: nameMatch && capitalize(camelize$1(nameMatch[1])),\n        prefixIdentifiers,\n        hoistStatic,\n        cacheHandlers,\n        nodeTransforms,\n        directiveTransforms,\n        transformHoist,\n        isBuiltInComponent,\n        isCustomElement,\n        expressionPlugins,\n        scopeId,\n        slotted,\n        ssr,\n        inSSR,\n        ssrCssVars,\n        bindingMetadata,\n        inline,\n        isTS,\n        onError,\n        onWarn,\n        compatConfig,\n        // state\n        root,\n        helpers: new Map(),\n        components: new Set(),\n        directives: new Set(),\n        hoists: [],\n        imports: [],\n        constantCache: new Map(),\n        temps: 0,\n        cached: 0,\n        identifiers: Object.create(null),\n        scopes: {\n            vFor: 0,\n            vSlot: 0,\n            vPre: 0,\n            vOnce: 0\n        },\n        parent: null,\n        currentNode: root,\n        childIndex: 0,\n        inVOnce: false,\n        // methods\n        helper(name) {\n            const count = context.helpers.get(name) || 0;\n            context.helpers.set(name, count + 1);\n            return name;\n        },\n        removeHelper(name) {\n            const count = context.helpers.get(name);\n            if (count) {\n                const currentCount = count - 1;\n                if (!currentCount) {\n                    context.helpers.delete(name);\n                }\n                else {\n                    context.helpers.set(name, currentCount);\n                }\n            }\n        },\n        helperString(name) {\n            return `_${helperNameMap[context.helper(name)]}`;\n        },\n        replaceNode(node) {\n            /* istanbul ignore if */\n            if ((process.env.NODE_ENV !== 'production')) {\n                if (!context.currentNode) {\n                    throw new Error(`Node being replaced is already removed.`);\n                }\n                if (!context.parent) {\n                    throw new Error(`Cannot replace root node.`);\n                }\n            }\n            context.parent.children[context.childIndex] = context.currentNode = node;\n        },\n        removeNode(node) {\n            if ((process.env.NODE_ENV !== 'production') && !context.parent) {\n                throw new Error(`Cannot remove root node.`);\n            }\n            const list = context.parent.children;\n            const removalIndex = node\n                ? list.indexOf(node)\n                : context.currentNode\n                    ? context.childIndex\n                    : -1;\n            /* istanbul ignore if */\n            if ((process.env.NODE_ENV !== 'production') && removalIndex < 0) {\n                throw new Error(`node being removed is not a child of current parent`);\n            }\n            if (!node || node === context.currentNode) {\n                // current node removed\n                context.currentNode = null;\n                context.onNodeRemoved();\n            }\n            else {\n                // sibling node removed\n                if (context.childIndex > removalIndex) {\n                    context.childIndex--;\n                    context.onNodeRemoved();\n                }\n            }\n            context.parent.children.splice(removalIndex, 1);\n        },\n        onNodeRemoved: () => { },\n        addIdentifiers(exp) {\n        },\n        removeIdentifiers(exp) {\n        },\n        hoist(exp) {\n            if (isString(exp))\n                exp = createSimpleExpression(exp);\n            context.hoists.push(exp);\n            const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2 /* CAN_HOIST */);\n            identifier.hoisted = exp;\n            return identifier;\n        },\n        cache(exp, isVNode = false) {\n            return createCacheExpression(context.cached++, exp, isVNode);\n        }\n    };\n    {\n        context.filters = new Set();\n    }\n    return context;\n}\nfunction transform(root, options) {\n    const context = createTransformContext(root, options);\n    traverseNode(root, context);\n    if (options.hoistStatic) {\n        hoistStatic(root, context);\n    }\n    if (!options.ssr) {\n        createRootCodegen(root, context);\n    }\n    // finalize meta information\n    root.helpers = [...context.helpers.keys()];\n    root.components = [...context.components];\n    root.directives = [...context.directives];\n    root.imports = context.imports;\n    root.hoists = context.hoists;\n    root.temps = context.temps;\n    root.cached = context.cached;\n    {\n        root.filters = [...context.filters];\n    }\n}\nfunction createRootCodegen(root, context) {\n    const { helper } = context;\n    const { children } = root;\n    if (children.length === 1) {\n        const child = children[0];\n        // if the single child is an element, turn it into a block.\n        if (isSingleElementRoot(root, child) && child.codegenNode) {\n            // single element root is never hoisted so codegenNode will never be\n            // SimpleExpressionNode\n            const codegenNode = child.codegenNode;\n            if (codegenNode.type === 13 /* VNODE_CALL */) {\n                makeBlock(codegenNode, context);\n            }\n            root.codegenNode = codegenNode;\n        }\n        else {\n            // - single <slot/>, IfNode, ForNode: already blocks.\n            // - single text node: always patched.\n            // root codegen falls through via genNode()\n            root.codegenNode = child;\n        }\n    }\n    else if (children.length > 1) {\n        // root has multiple nodes - return a fragment block.\n        let patchFlag = 64 /* STABLE_FRAGMENT */;\n        let patchFlagText = PatchFlagNames[64 /* STABLE_FRAGMENT */];\n        // check if the fragment actually contains a single valid child with\n        // the rest being comments\n        if ((process.env.NODE_ENV !== 'production') &&\n            children.filter(c => c.type !== 3 /* COMMENT */).length === 1) {\n            patchFlag |= 2048 /* DEV_ROOT_FRAGMENT */;\n            patchFlagText += `, ${PatchFlagNames[2048 /* DEV_ROOT_FRAGMENT */]}`;\n        }\n        root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, undefined, false /* isComponent */);\n    }\n    else ;\n}\nfunction traverseChildren(parent, context) {\n    let i = 0;\n    const nodeRemoved = () => {\n        i--;\n    };\n    for (; i < parent.children.length; i++) {\n        const child = parent.children[i];\n        if (isString(child))\n            continue;\n        context.parent = parent;\n        context.childIndex = i;\n        context.onNodeRemoved = nodeRemoved;\n        traverseNode(child, context);\n    }\n}\nfunction traverseNode(node, context) {\n    context.currentNode = node;\n    // apply transform plugins\n    const { nodeTransforms } = context;\n    const exitFns = [];\n    for (let i = 0; i < nodeTransforms.length; i++) {\n        const onExit = nodeTransforms[i](node, context);\n        if (onExit) {\n            if (isArray(onExit)) {\n                exitFns.push(...onExit);\n            }\n            else {\n                exitFns.push(onExit);\n            }\n        }\n        if (!context.currentNode) {\n            // node was removed\n            return;\n        }\n        else {\n            // node may have been replaced\n            node = context.currentNode;\n        }\n    }\n    switch (node.type) {\n        case 3 /* COMMENT */:\n            if (!context.ssr) {\n                // inject import for the Comment symbol, which is needed for creating\n                // comment nodes with `createVNode`\n                context.helper(CREATE_COMMENT);\n            }\n            break;\n        case 5 /* INTERPOLATION */:\n            // no need to traverse, but we need to inject toString helper\n            if (!context.ssr) {\n                context.helper(TO_DISPLAY_STRING);\n            }\n            break;\n        // for container types, further traverse downwards\n        case 9 /* IF */:\n            for (let i = 0; i < node.branches.length; i++) {\n                traverseNode(node.branches[i], context);\n            }\n            break;\n        case 10 /* IF_BRANCH */:\n        case 11 /* FOR */:\n        case 1 /* ELEMENT */:\n        case 0 /* ROOT */:\n            traverseChildren(node, context);\n            break;\n    }\n    // exit transforms\n    context.currentNode = node;\n    let i = exitFns.length;\n    while (i--) {\n        exitFns[i]();\n    }\n}\nfunction createStructuralDirectiveTransform(name, fn) {\n    const matches = isString(name)\n        ? (n) => n === name\n        : (n) => name.test(n);\n    return (node, context) => {\n        if (node.type === 1 /* ELEMENT */) {\n            const { props } = node;\n            // structural directive transforms are not concerned with slots\n            // as they are handled separately in vSlot.ts\n            if (node.tagType === 3 /* TEMPLATE */ && props.some(isVSlot)) {\n                return;\n            }\n            const exitFns = [];\n            for (let i = 0; i < props.length; i++) {\n                const prop = props[i];\n                if (prop.type === 7 /* DIRECTIVE */ && matches(prop.name)) {\n                    // structural directives are removed to avoid infinite recursion\n                    // also we remove them *before* applying so that it can further\n                    // traverse itself in case it moves the node around\n                    props.splice(i, 1);\n                    i--;\n                    const onExit = fn(node, prop, context);\n                    if (onExit)\n                        exitFns.push(onExit);\n                }\n            }\n            return exitFns;\n        }\n    };\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\nfunction createCodegenContext(ast, { mode = 'function', prefixIdentifiers = mode === 'module', sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssrRuntimeModuleName = 'vue/server-renderer', ssr = false, isTS = false, inSSR = false }) {\n    const context = {\n        mode,\n        prefixIdentifiers,\n        sourceMap,\n        filename,\n        scopeId,\n        optimizeImports,\n        runtimeGlobalName,\n        runtimeModuleName,\n        ssrRuntimeModuleName,\n        ssr,\n        isTS,\n        inSSR,\n        source: ast.loc.source,\n        code: ``,\n        column: 1,\n        line: 1,\n        offset: 0,\n        indentLevel: 0,\n        pure: false,\n        map: undefined,\n        helper(key) {\n            return `_${helperNameMap[key]}`;\n        },\n        push(code, node) {\n            context.code += code;\n        },\n        indent() {\n            newline(++context.indentLevel);\n        },\n        deindent(withoutNewLine = false) {\n            if (withoutNewLine) {\n                --context.indentLevel;\n            }\n            else {\n                newline(--context.indentLevel);\n            }\n        },\n        newline() {\n            newline(context.indentLevel);\n        }\n    };\n    function newline(n) {\n        context.push('\\n' + `  `.repeat(n));\n    }\n    return context;\n}\nfunction generate(ast, options = {}) {\n    const context = createCodegenContext(ast, options);\n    if (options.onContextCreated)\n        options.onContextCreated(context);\n    const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;\n    const hasHelpers = ast.helpers.length > 0;\n    const useWithBlock = !prefixIdentifiers && mode !== 'module';\n    // preambles\n    // in setup() inline mode, the preamble is generated in a sub context\n    // and returned separately.\n    const preambleContext = context;\n    {\n        genFunctionPreamble(ast, preambleContext);\n    }\n    // enter render function\n    const functionName = ssr ? `ssrRender` : `render`;\n    const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache'];\n    const signature = args.join(', ');\n    {\n        push(`function ${functionName}(${signature}) {`);\n    }\n    indent();\n    if (useWithBlock) {\n        push(`with (_ctx) {`);\n        indent();\n        // function mode const declarations should be inside with block\n        // also they should be renamed to avoid collision with user properties\n        if (hasHelpers) {\n            push(`const { ${ast.helpers.map(aliasHelper).join(', ')} } = _Vue`);\n            push(`\\n`);\n            newline();\n        }\n    }\n    // generate asset resolution statements\n    if (ast.components.length) {\n        genAssets(ast.components, 'component', context);\n        if (ast.directives.length || ast.temps > 0) {\n            newline();\n        }\n    }\n    if (ast.directives.length) {\n        genAssets(ast.directives, 'directive', context);\n        if (ast.temps > 0) {\n            newline();\n        }\n    }\n    if (ast.filters && ast.filters.length) {\n        newline();\n        genAssets(ast.filters, 'filter', context);\n        newline();\n    }\n    if (ast.temps > 0) {\n        push(`let `);\n        for (let i = 0; i < ast.temps; i++) {\n            push(`${i > 0 ? `, ` : ``}_temp${i}`);\n        }\n    }\n    if (ast.components.length || ast.directives.length || ast.temps) {\n        push(`\\n`);\n        newline();\n    }\n    // generate the VNode tree expression\n    if (!ssr) {\n        push(`return `);\n    }\n    if (ast.codegenNode) {\n        genNode(ast.codegenNode, context);\n    }\n    else {\n        push(`null`);\n    }\n    if (useWithBlock) {\n        deindent();\n        push(`}`);\n    }\n    deindent();\n    push(`}`);\n    return {\n        ast,\n        code: context.code,\n        preamble: ``,\n        // SourceMapGenerator does have toJSON() method but it's not in the types\n        map: context.map ? context.map.toJSON() : undefined\n    };\n}\nfunction genFunctionPreamble(ast, context) {\n    const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName, ssrRuntimeModuleName } = context;\n    const VueBinding = runtimeGlobalName;\n    // Generate const declaration for helpers\n    // In prefix mode, we place the const declaration at top so it's done\n    // only once; But if we not prefixing, we place the declaration inside the\n    // with block so it doesn't incur the `in` check cost for every helper access.\n    if (ast.helpers.length > 0) {\n        {\n            // \"with\" mode.\n            // save Vue in a separate variable to avoid collision\n            push(`const _Vue = ${VueBinding}\\n`);\n            // in \"with\" mode, helpers are declared inside the with block to avoid\n            // has check cost, but hoists are lifted out of the function - we need\n            // to provide the helper here.\n            if (ast.hoists.length) {\n                const staticHelpers = [\n                    CREATE_VNODE,\n                    CREATE_ELEMENT_VNODE,\n                    CREATE_COMMENT,\n                    CREATE_TEXT,\n                    CREATE_STATIC\n                ]\n                    .filter(helper => ast.helpers.includes(helper))\n                    .map(aliasHelper)\n                    .join(', ');\n                push(`const { ${staticHelpers} } = _Vue\\n`);\n            }\n        }\n    }\n    genHoists(ast.hoists, context);\n    newline();\n    push(`return `);\n}\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\n    const resolver = helper(type === 'filter'\n        ? RESOLVE_FILTER\n        : type === 'component'\n            ? RESOLVE_COMPONENT\n            : RESOLVE_DIRECTIVE);\n    for (let i = 0; i < assets.length; i++) {\n        let id = assets[i];\n        // potential component implicit self-reference inferred from SFC filename\n        const maybeSelfReference = id.endsWith('__self');\n        if (maybeSelfReference) {\n            id = id.slice(0, -6);\n        }\n        push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);\n        if (i < assets.length - 1) {\n            newline();\n        }\n    }\n}\nfunction genHoists(hoists, context) {\n    if (!hoists.length) {\n        return;\n    }\n    context.pure = true;\n    const { push, newline, helper, scopeId, mode } = context;\n    newline();\n    for (let i = 0; i < hoists.length; i++) {\n        const exp = hoists[i];\n        if (exp) {\n            push(`const _hoisted_${i + 1} = ${``}`);\n            genNode(exp, context);\n            newline();\n        }\n    }\n    context.pure = false;\n}\nfunction isText$1(n) {\n    return (isString(n) ||\n        n.type === 4 /* SIMPLE_EXPRESSION */ ||\n        n.type === 2 /* TEXT */ ||\n        n.type === 5 /* INTERPOLATION */ ||\n        n.type === 8 /* COMPOUND_EXPRESSION */);\n}\nfunction genNodeListAsArray(nodes, context) {\n    const multilines = nodes.length > 3 ||\n        (((process.env.NODE_ENV !== 'production')) && nodes.some(n => isArray(n) || !isText$1(n)));\n    context.push(`[`);\n    multilines && context.indent();\n    genNodeList(nodes, context, multilines);\n    multilines && context.deindent();\n    context.push(`]`);\n}\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\n    const { push, newline } = context;\n    for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (isString(node)) {\n            push(node);\n        }\n        else if (isArray(node)) {\n            genNodeListAsArray(node, context);\n        }\n        else {\n            genNode(node, context);\n        }\n        if (i < nodes.length - 1) {\n            if (multilines) {\n                comma && push(',');\n                newline();\n            }\n            else {\n                comma && push(', ');\n            }\n        }\n    }\n}\nfunction genNode(node, context) {\n    if (isString(node)) {\n        context.push(node);\n        return;\n    }\n    if (isSymbol(node)) {\n        context.push(context.helper(node));\n        return;\n    }\n    switch (node.type) {\n        case 1 /* ELEMENT */:\n        case 9 /* IF */:\n        case 11 /* FOR */:\n            (process.env.NODE_ENV !== 'production') &&\n                assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` +\n                    `Apply appropriate transforms first.`);\n            genNode(node.codegenNode, context);\n            break;\n        case 2 /* TEXT */:\n            genText(node, context);\n            break;\n        case 4 /* SIMPLE_EXPRESSION */:\n            genExpression(node, context);\n            break;\n        case 5 /* INTERPOLATION */:\n            genInterpolation(node, context);\n            break;\n        case 12 /* TEXT_CALL */:\n            genNode(node.codegenNode, context);\n            break;\n        case 8 /* COMPOUND_EXPRESSION */:\n            genCompoundExpression(node, context);\n            break;\n        case 3 /* COMMENT */:\n            genComment(node, context);\n            break;\n        case 13 /* VNODE_CALL */:\n            genVNodeCall(node, context);\n            break;\n        case 14 /* JS_CALL_EXPRESSION */:\n            genCallExpression(node, context);\n            break;\n        case 15 /* JS_OBJECT_EXPRESSION */:\n            genObjectExpression(node, context);\n            break;\n        case 17 /* JS_ARRAY_EXPRESSION */:\n            genArrayExpression(node, context);\n            break;\n        case 18 /* JS_FUNCTION_EXPRESSION */:\n            genFunctionExpression(node, context);\n            break;\n        case 19 /* JS_CONDITIONAL_EXPRESSION */:\n            genConditionalExpression(node, context);\n            break;\n        case 20 /* JS_CACHE_EXPRESSION */:\n            genCacheExpression(node, context);\n            break;\n        case 21 /* JS_BLOCK_STATEMENT */:\n            genNodeList(node.body, context, true, false);\n            break;\n        // SSR only types\n        case 22 /* JS_TEMPLATE_LITERAL */:\n            break;\n        case 23 /* JS_IF_STATEMENT */:\n            break;\n        case 24 /* JS_ASSIGNMENT_EXPRESSION */:\n            break;\n        case 25 /* JS_SEQUENCE_EXPRESSION */:\n            break;\n        case 26 /* JS_RETURN_STATEMENT */:\n            break;\n        /* istanbul ignore next */\n        case 10 /* IF_BRANCH */:\n            // noop\n            break;\n        default:\n            if ((process.env.NODE_ENV !== 'production')) {\n                assert(false, `unhandled codegen node type: ${node.type}`);\n                // make sure we exhaust all possible types\n                const exhaustiveCheck = node;\n                return exhaustiveCheck;\n            }\n    }\n}\nfunction genText(node, context) {\n    context.push(JSON.stringify(node.content), node);\n}\nfunction genExpression(node, context) {\n    const { content, isStatic } = node;\n    context.push(isStatic ? JSON.stringify(content) : content, node);\n}\nfunction genInterpolation(node, context) {\n    const { push, helper, pure } = context;\n    if (pure)\n        push(PURE_ANNOTATION);\n    push(`${helper(TO_DISPLAY_STRING)}(`);\n    genNode(node.content, context);\n    push(`)`);\n}\nfunction genCompoundExpression(node, context) {\n    for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        if (isString(child)) {\n            context.push(child);\n        }\n        else {\n            genNode(child, context);\n        }\n    }\n}\nfunction genExpressionAsPropertyKey(node, context) {\n    const { push } = context;\n    if (node.type === 8 /* COMPOUND_EXPRESSION */) {\n        push(`[`);\n        genCompoundExpression(node, context);\n        push(`]`);\n    }\n    else if (node.isStatic) {\n        // only quote keys if necessary\n        const text = isSimpleIdentifier(node.content)\n            ? node.content\n            : JSON.stringify(node.content);\n        push(text, node);\n    }\n    else {\n        push(`[${node.content}]`, node);\n    }\n}\nfunction genComment(node, context) {\n    const { push, helper, pure } = context;\n    if (pure) {\n        push(PURE_ANNOTATION);\n    }\n    push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\n}\nfunction genVNodeCall(node, context) {\n    const { push, helper, pure } = context;\n    const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking, isComponent } = node;\n    if (directives) {\n        push(helper(WITH_DIRECTIVES) + `(`);\n    }\n    if (isBlock) {\n        push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\n    }\n    if (pure) {\n        push(PURE_ANNOTATION);\n    }\n    const callHelper = isBlock\n        ? getVNodeBlockHelper(context.inSSR, isComponent)\n        : getVNodeHelper(context.inSSR, isComponent);\n    push(helper(callHelper) + `(`, node);\n    genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\n    push(`)`);\n    if (isBlock) {\n        push(`)`);\n    }\n    if (directives) {\n        push(`, `);\n        genNode(directives, context);\n        push(`)`);\n    }\n}\nfunction genNullableArgs(args) {\n    let i = args.length;\n    while (i--) {\n        if (args[i] != null)\n            break;\n    }\n    return args.slice(0, i + 1).map(arg => arg || `null`);\n}\n// JavaScript\nfunction genCallExpression(node, context) {\n    const { push, helper, pure } = context;\n    const callee = isString(node.callee) ? node.callee : helper(node.callee);\n    if (pure) {\n        push(PURE_ANNOTATION);\n    }\n    push(callee + `(`, node);\n    genNodeList(node.arguments, context);\n    push(`)`);\n}\nfunction genObjectExpression(node, context) {\n    const { push, indent, deindent, newline } = context;\n    const { properties } = node;\n    if (!properties.length) {\n        push(`{}`, node);\n        return;\n    }\n    const multilines = properties.length > 1 ||\n        (((process.env.NODE_ENV !== 'production')) &&\n            properties.some(p => p.value.type !== 4 /* SIMPLE_EXPRESSION */));\n    push(multilines ? `{` : `{ `);\n    multilines && indent();\n    for (let i = 0; i < properties.length; i++) {\n        const { key, value } = properties[i];\n        // key\n        genExpressionAsPropertyKey(key, context);\n        push(`: `);\n        // value\n        genNode(value, context);\n        if (i < properties.length - 1) {\n            // will only reach this if it's multilines\n            push(`,`);\n            newline();\n        }\n    }\n    multilines && deindent();\n    push(multilines ? `}` : ` }`);\n}\nfunction genArrayExpression(node, context) {\n    genNodeListAsArray(node.elements, context);\n}\nfunction genFunctionExpression(node, context) {\n    const { push, indent, deindent } = context;\n    const { params, returns, body, newline, isSlot } = node;\n    if (isSlot) {\n        // wrap slot functions with owner context\n        push(`_${helperNameMap[WITH_CTX]}(`);\n    }\n    push(`(`, node);\n    if (isArray(params)) {\n        genNodeList(params, context);\n    }\n    else if (params) {\n        genNode(params, context);\n    }\n    push(`) => `);\n    if (newline || body) {\n        push(`{`);\n        indent();\n    }\n    if (returns) {\n        if (newline) {\n            push(`return `);\n        }\n        if (isArray(returns)) {\n            genNodeListAsArray(returns, context);\n        }\n        else {\n            genNode(returns, context);\n        }\n    }\n    else if (body) {\n        genNode(body, context);\n    }\n    if (newline || body) {\n        deindent();\n        push(`}`);\n    }\n    if (isSlot) {\n        if (node.isNonScopedSlot) {\n            push(`, undefined, true`);\n        }\n        push(`)`);\n    }\n}\nfunction genConditionalExpression(node, context) {\n    const { test, consequent, alternate, newline: needNewline } = node;\n    const { push, indent, deindent, newline } = context;\n    if (test.type === 4 /* SIMPLE_EXPRESSION */) {\n        const needsParens = !isSimpleIdentifier(test.content);\n        needsParens && push(`(`);\n        genExpression(test, context);\n        needsParens && push(`)`);\n    }\n    else {\n        push(`(`);\n        genNode(test, context);\n        push(`)`);\n    }\n    needNewline && indent();\n    context.indentLevel++;\n    needNewline || push(` `);\n    push(`? `);\n    genNode(consequent, context);\n    context.indentLevel--;\n    needNewline && newline();\n    needNewline || push(` `);\n    push(`: `);\n    const isNested = alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */;\n    if (!isNested) {\n        context.indentLevel++;\n    }\n    genNode(alternate, context);\n    if (!isNested) {\n        context.indentLevel--;\n    }\n    needNewline && deindent(true /* without newline */);\n}\nfunction genCacheExpression(node, context) {\n    const { push, helper, indent, deindent, newline } = context;\n    push(`_cache[${node.index}] || (`);\n    if (node.isVNode) {\n        indent();\n        push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\n        newline();\n    }\n    push(`_cache[${node.index}] = `);\n    genNode(node.value, context);\n    if (node.isVNode) {\n        push(`,`);\n        newline();\n        push(`${helper(SET_BLOCK_TRACKING)}(1),`);\n        newline();\n        push(`_cache[${node.index}]`);\n        deindent();\n    }\n    push(`)`);\n}\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = Object.create(null)) {\n    {\n        return;\n    }\n}\nfunction isReferencedIdentifier(id, parent, parentStack) {\n    {\n        return false;\n    }\n}\nfunction isInDestructureAssignment(parent, parentStack) {\n    if (parent &&\n        (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')) {\n        let i = parentStack.length;\n        while (i--) {\n            const p = parentStack[i];\n            if (p.type === 'AssignmentExpression') {\n                return true;\n            }\n            else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\n                break;\n            }\n        }\n    }\n    return false;\n}\nfunction walkFunctionParams(node, onIdent) {\n    for (const p of node.params) {\n        for (const id of extractIdentifiers(p)) {\n            onIdent(id);\n        }\n    }\n}\nfunction walkBlockDeclarations(block, onIdent) {\n    for (const stmt of block.body) {\n        if (stmt.type === 'VariableDeclaration') {\n            if (stmt.declare)\n                continue;\n            for (const decl of stmt.declarations) {\n                for (const id of extractIdentifiers(decl.id)) {\n                    onIdent(id);\n                }\n            }\n        }\n        else if (stmt.type === 'FunctionDeclaration' ||\n            stmt.type === 'ClassDeclaration') {\n            if (stmt.declare || !stmt.id)\n                continue;\n            onIdent(stmt.id);\n        }\n    }\n}\nfunction extractIdentifiers(param, nodes = []) {\n    switch (param.type) {\n        case 'Identifier':\n            nodes.push(param);\n            break;\n        case 'MemberExpression':\n            let object = param;\n            while (object.type === 'MemberExpression') {\n                object = object.object;\n            }\n            nodes.push(object);\n            break;\n        case 'ObjectPattern':\n            for (const prop of param.properties) {\n                if (prop.type === 'RestElement') {\n                    extractIdentifiers(prop.argument, nodes);\n                }\n                else {\n                    extractIdentifiers(prop.value, nodes);\n                }\n            }\n            break;\n        case 'ArrayPattern':\n            param.elements.forEach(element => {\n                if (element)\n                    extractIdentifiers(element, nodes);\n            });\n            break;\n        case 'RestElement':\n            extractIdentifiers(param.argument, nodes);\n            break;\n        case 'AssignmentPattern':\n            extractIdentifiers(param.left, nodes);\n            break;\n    }\n    return nodes;\n}\nconst isFunctionType = (node) => {\n    return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n};\nconst isStaticProperty = (node) => node &&\n    (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\n    !node.computed;\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nconst prohibitedKeywordRE = new RegExp('\\\\b' +\n    ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n        'super,throw,while,yield,delete,export,import,return,switch,default,' +\n        'extends,finally,continue,debugger,function,arguments,typeof,void')\n        .split(',')\n        .join('\\\\b|\\\\b') +\n    '\\\\b');\n// strip strings in expressions\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n/**\n * Validate a non-prefixed expression.\n * This is only called when using the in-browser runtime compiler since it\n * doesn't prefix expressions.\n */\nfunction validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {\n    const exp = node.content;\n    // empty expressions are validated per-directive since some directives\n    // do allow empty expressions.\n    if (!exp.trim()) {\n        return;\n    }\n    try {\n        new Function(asRawStatements\n            ? ` ${exp} `\n            : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);\n    }\n    catch (e) {\n        let message = e.message;\n        const keywordMatch = exp\n            .replace(stripStringRE, '')\n            .match(prohibitedKeywordRE);\n        if (keywordMatch) {\n            message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`;\n        }\n        context.onError(createCompilerError(44 /* X_INVALID_EXPRESSION */, node.loc, undefined, message));\n    }\n}\n\nconst transformExpression = (node, context) => {\n    if (node.type === 5 /* INTERPOLATION */) {\n        node.content = processExpression(node.content, context);\n    }\n    else if (node.type === 1 /* ELEMENT */) {\n        // handle directives on element\n        for (let i = 0; i < node.props.length; i++) {\n            const dir = node.props[i];\n            // do not process for v-on & v-for since they are special handled\n            if (dir.type === 7 /* DIRECTIVE */ && dir.name !== 'for') {\n                const exp = dir.exp;\n                const arg = dir.arg;\n                // do not process exp if this is v-on:arg - we need special handling\n                // for wrapping inline statements.\n                if (exp &&\n                    exp.type === 4 /* SIMPLE_EXPRESSION */ &&\n                    !(dir.name === 'on' && arg)) {\n                    dir.exp = processExpression(exp, context, \n                    // slot args must be processed as function params\n                    dir.name === 'slot');\n                }\n                if (arg && arg.type === 4 /* SIMPLE_EXPRESSION */ && !arg.isStatic) {\n                    dir.arg = processExpression(arg, context);\n                }\n            }\n        }\n    }\n};\n// Important: since this function uses Node.js only dependencies, it should\n// always be used with a leading !true check so that it can be\n// tree-shaken from the browser build.\nfunction processExpression(node, context, \n// some expressions like v-slot props & v-for aliases should be parsed as\n// function params\nasParams = false, \n// v-on handler values may contain multiple statements\nasRawStatements = false, localVars = Object.create(context.identifiers)) {\n    {\n        if ((process.env.NODE_ENV !== 'production')) {\n            // simple in-browser validation (same logic in 2.x)\n            validateBrowserExpression(node, context, asParams, asRawStatements);\n        }\n        return node;\n    }\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n        // #1587: We need to dynamically increment the key based on the current\n        // node's sibling nodes, since chained v-if/else branches are\n        // rendered at the same depth\n        const siblings = context.parent.children;\n        let i = siblings.indexOf(ifNode);\n        let key = 0;\n        while (i-- >= 0) {\n            const sibling = siblings[i];\n            if (sibling && sibling.type === 9 /* IF */) {\n                key += sibling.branches.length;\n            }\n        }\n        // Exit callback. Complete the codegenNode when all children have been\n        // transformed.\n        return () => {\n            if (isRoot) {\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\n            }\n            else {\n                // attach this branch's codegen node to the v-if root.\n                const parentCondition = getParentCondition(ifNode.codegenNode);\n                parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\n            }\n        };\n    });\n});\n// target-agnostic transform used for both Client and SSR\nfunction processIf(node, dir, context, processCodegen) {\n    if (dir.name !== 'else' &&\n        (!dir.exp || !dir.exp.content.trim())) {\n        const loc = dir.exp ? dir.exp.loc : node.loc;\n        context.onError(createCompilerError(28 /* X_V_IF_NO_EXPRESSION */, dir.loc));\n        dir.exp = createSimpleExpression(`true`, false, loc);\n    }\n    if ((process.env.NODE_ENV !== 'production') && true && dir.exp) {\n        validateBrowserExpression(dir.exp, context);\n    }\n    if (dir.name === 'if') {\n        const branch = createIfBranch(node, dir);\n        const ifNode = {\n            type: 9 /* IF */,\n            loc: node.loc,\n            branches: [branch]\n        };\n        context.replaceNode(ifNode);\n        if (processCodegen) {\n            return processCodegen(ifNode, branch, true);\n        }\n    }\n    else {\n        // locate the adjacent v-if\n        const siblings = context.parent.children;\n        const comments = [];\n        let i = siblings.indexOf(node);\n        while (i-- >= -1) {\n            const sibling = siblings[i];\n            if ((process.env.NODE_ENV !== 'production') && sibling && sibling.type === 3 /* COMMENT */) {\n                context.removeNode(sibling);\n                comments.unshift(sibling);\n                continue;\n            }\n            if (sibling &&\n                sibling.type === 2 /* TEXT */ &&\n                !sibling.content.trim().length) {\n                context.removeNode(sibling);\n                continue;\n            }\n            if (sibling && sibling.type === 9 /* IF */) {\n                // Check if v-else was followed by v-else-if\n                if (dir.name === 'else-if' &&\n                    sibling.branches[sibling.branches.length - 1].condition === undefined) {\n                    context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\n                }\n                // move the node to the if node's branches\n                context.removeNode();\n                const branch = createIfBranch(node, dir);\n                if ((process.env.NODE_ENV !== 'production') &&\n                    comments.length &&\n                    // #3619 ignore comments if the v-if is direct child of <transition>\n                    !(context.parent &&\n                        context.parent.type === 1 /* ELEMENT */ &&\n                        isBuiltInType(context.parent.tag, 'transition'))) {\n                    branch.children = [...comments, ...branch.children];\n                }\n                // check if user is forcing same key on different branches\n                if ((process.env.NODE_ENV !== 'production') || !true) {\n                    const key = branch.userKey;\n                    if (key) {\n                        sibling.branches.forEach(({ userKey }) => {\n                            if (isSameKey(userKey, key)) {\n                                context.onError(createCompilerError(29 /* X_V_IF_SAME_KEY */, branch.userKey.loc));\n                            }\n                        });\n                    }\n                }\n                sibling.branches.push(branch);\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\n                // since the branch was removed, it will not be traversed.\n                // make sure to traverse here.\n                traverseNode(branch, context);\n                // call on exit\n                if (onExit)\n                    onExit();\n                // make sure to reset currentNode after traversal to indicate this\n                // node has been removed.\n                context.currentNode = null;\n            }\n            else {\n                context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\n            }\n            break;\n        }\n    }\n}\nfunction createIfBranch(node, dir) {\n    const isTemplateIf = node.tagType === 3 /* TEMPLATE */;\n    return {\n        type: 10 /* IF_BRANCH */,\n        loc: node.loc,\n        condition: dir.name === 'else' ? undefined : dir.exp,\n        children: isTemplateIf && !findDir(node, 'for') ? node.children : [node],\n        userKey: findProp(node, `key`),\n        isTemplateIf\n    };\n}\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\n    if (branch.condition) {\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), \n        // make sure to pass in asBlock: true so that the comment node call\n        // closes the current block.\n        createCallExpression(context.helper(CREATE_COMMENT), [\n            (process.env.NODE_ENV !== 'production') ? '\"v-if\"' : '\"\"',\n            'true'\n        ]));\n    }\n    else {\n        return createChildrenCodegenNode(branch, keyIndex, context);\n    }\n}\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\n    const { helper } = context;\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2 /* CAN_HOIST */));\n    const { children } = branch;\n    const firstChild = children[0];\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* ELEMENT */;\n    if (needFragmentWrapper) {\n        if (children.length === 1 && firstChild.type === 11 /* FOR */) {\n            // optimize away nested fragments when child is a ForNode\n            const vnodeCall = firstChild.codegenNode;\n            injectProp(vnodeCall, keyProperty, context);\n            return vnodeCall;\n        }\n        else {\n            let patchFlag = 64 /* STABLE_FRAGMENT */;\n            let patchFlagText = PatchFlagNames[64 /* STABLE_FRAGMENT */];\n            // check if the fragment actually contains a single valid child with\n            // the rest being comments\n            if ((process.env.NODE_ENV !== 'production') &&\n                !branch.isTemplateIf &&\n                children.filter(c => c.type !== 3 /* COMMENT */).length === 1) {\n                patchFlag |= 2048 /* DEV_ROOT_FRAGMENT */;\n                patchFlagText += `, ${PatchFlagNames[2048 /* DEV_ROOT_FRAGMENT */]}`;\n            }\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, false, false /* isComponent */, branch.loc);\n        }\n    }\n    else {\n        const ret = firstChild.codegenNode;\n        const vnodeCall = getMemoedVNodeCall(ret);\n        // Change createVNode to createBlock.\n        if (vnodeCall.type === 13 /* VNODE_CALL */) {\n            makeBlock(vnodeCall, context);\n        }\n        // inject branch key\n        injectProp(vnodeCall, keyProperty, context);\n        return ret;\n    }\n}\nfunction isSameKey(a, b) {\n    if (!a || a.type !== b.type) {\n        return false;\n    }\n    if (a.type === 6 /* ATTRIBUTE */) {\n        if (a.value.content !== b.value.content) {\n            return false;\n        }\n    }\n    else {\n        // directive\n        const exp = a.exp;\n        const branchExp = b.exp;\n        if (exp.type !== branchExp.type) {\n            return false;\n        }\n        if (exp.type !== 4 /* SIMPLE_EXPRESSION */ ||\n            exp.isStatic !== branchExp.isStatic ||\n            exp.content !== branchExp.content) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction getParentCondition(node) {\n    while (true) {\n        if (node.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\n            if (node.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\n                node = node.alternate;\n            }\n            else {\n                return node;\n            }\n        }\n        else if (node.type === 20 /* JS_CACHE_EXPRESSION */) {\n            node = node.value;\n        }\n    }\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\n    const { helper, removeHelper } = context;\n    return processFor(node, dir, context, forNode => {\n        // create the loop render function expression now, and add the\n        // iterator on exit after all children have been traversed\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\n            forNode.source\n        ]);\n        const isTemplate = isTemplateNode(node);\n        const memo = findDir(node, 'memo');\n        const keyProp = findProp(node, `key`);\n        const keyExp = keyProp &&\n            (keyProp.type === 6 /* ATTRIBUTE */\n                ? createSimpleExpression(keyProp.value.content, true)\n                : keyProp.exp);\n        const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\n        const isStableFragment = forNode.source.type === 4 /* SIMPLE_EXPRESSION */ &&\n            forNode.source.constType > 0 /* NOT_CONSTANT */;\n        const fragmentFlag = isStableFragment\n            ? 64 /* STABLE_FRAGMENT */\n            : keyProp\n                ? 128 /* KEYED_FRAGMENT */\n                : 256 /* UNKEYED_FRAGMENT */;\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag +\n            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``), undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, false /* isComponent */, node.loc);\n        return () => {\n            // finish the codegen now that all children have been traversed\n            let childBlock;\n            const { children } = forNode;\n            // check <template v-for> key placement\n            if (((process.env.NODE_ENV !== 'production') || !true) && isTemplate) {\n                node.children.some(c => {\n                    if (c.type === 1 /* ELEMENT */) {\n                        const key = findProp(c, 'key');\n                        if (key) {\n                            context.onError(createCompilerError(33 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\n                            return true;\n                        }\n                    }\n                });\n            }\n            const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* ELEMENT */;\n            const slotOutlet = isSlotOutlet(node)\n                ? node\n                : isTemplate &&\n                    node.children.length === 1 &&\n                    isSlotOutlet(node.children[0])\n                    ? node.children[0] // api-extractor somehow fails to infer this\n                    : null;\n            if (slotOutlet) {\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\n                childBlock = slotOutlet.codegenNode;\n                if (isTemplate && keyProperty) {\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\n                    // we need to inject the key to the renderSlot() call.\n                    // the props for renderSlot is passed as the 3rd argument.\n                    injectProp(childBlock, keyProperty, context);\n                }\n            }\n            else if (needFragmentWrapper) {\n                // <template v-for=\"...\"> with text or multi-elements\n                // should generate a fragment block for each loop\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64 /* STABLE_FRAGMENT */ +\n                    ((process.env.NODE_ENV !== 'production')\n                        ? ` /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`\n                        : ``), undefined, undefined, true, undefined, false /* isComponent */);\n            }\n            else {\n                // Normal element v-for. Directly use the child's codegenNode\n                // but mark it as a block.\n                childBlock = children[0]\n                    .codegenNode;\n                if (isTemplate && keyProperty) {\n                    injectProp(childBlock, keyProperty, context);\n                }\n                if (childBlock.isBlock !== !isStableFragment) {\n                    if (childBlock.isBlock) {\n                        // switch from block to vnode\n                        removeHelper(OPEN_BLOCK);\n                        removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n                    }\n                    else {\n                        // switch from vnode to block\n                        removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n                    }\n                }\n                childBlock.isBlock = !isStableFragment;\n                if (childBlock.isBlock) {\n                    helper(OPEN_BLOCK);\n                    helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n                }\n                else {\n                    helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n                }\n            }\n            if (memo) {\n                const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [\n                    createSimpleExpression(`_cached`)\n                ]));\n                loop.body = createBlockStatement([\n                    createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\n                    createCompoundExpression([\n                        `if (_cached`,\n                        ...(keyExp ? [` && _cached.key === `, keyExp] : []),\n                        ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`\n                    ]),\n                    createCompoundExpression([`const _item = `, childBlock]),\n                    createSimpleExpression(`_item.memo = _memo`),\n                    createSimpleExpression(`return _item`)\n                ]);\n                renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));\n            }\n            else {\n                renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\n            }\n        };\n    });\n});\n// target-agnostic transform used for both Client and SSR\nfunction processFor(node, dir, context, processCodegen) {\n    if (!dir.exp) {\n        context.onError(createCompilerError(31 /* X_V_FOR_NO_EXPRESSION */, dir.loc));\n        return;\n    }\n    const parseResult = parseForExpression(\n    // can only be simple expression because vFor transform is applied\n    // before expression transform.\n    dir.exp, context);\n    if (!parseResult) {\n        context.onError(createCompilerError(32 /* X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\n        return;\n    }\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\n    const { source, value, key, index } = parseResult;\n    const forNode = {\n        type: 11 /* FOR */,\n        loc: dir.loc,\n        source,\n        valueAlias: value,\n        keyAlias: key,\n        objectIndexAlias: index,\n        parseResult,\n        children: isTemplateNode(node) ? node.children : [node]\n    };\n    context.replaceNode(forNode);\n    // bookkeeping\n    scopes.vFor++;\n    const onExit = processCodegen && processCodegen(forNode);\n    return () => {\n        scopes.vFor--;\n        if (onExit)\n            onExit();\n    };\n}\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n// This regex doesn't cover the case if key or index aliases have destructuring,\n// but those do not make sense in the first place, so this works in practice.\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nconst stripParensRE = /^\\(|\\)$/g;\nfunction parseForExpression(input, context) {\n    const loc = input.loc;\n    const exp = input.content;\n    const inMatch = exp.match(forAliasRE);\n    if (!inMatch)\n        return;\n    const [, LHS, RHS] = inMatch;\n    const result = {\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\n        value: undefined,\n        key: undefined,\n        index: undefined\n    };\n    if ((process.env.NODE_ENV !== 'production') && true) {\n        validateBrowserExpression(result.source, context);\n    }\n    let valueContent = LHS.trim().replace(stripParensRE, '').trim();\n    const trimmedOffset = LHS.indexOf(valueContent);\n    const iteratorMatch = valueContent.match(forIteratorRE);\n    if (iteratorMatch) {\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\n        const keyContent = iteratorMatch[1].trim();\n        let keyOffset;\n        if (keyContent) {\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\n            if ((process.env.NODE_ENV !== 'production') && true) {\n                validateBrowserExpression(result.key, context, true);\n            }\n        }\n        if (iteratorMatch[2]) {\n            const indexContent = iteratorMatch[2].trim();\n            if (indexContent) {\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\n                    ? keyOffset + keyContent.length\n                    : trimmedOffset + valueContent.length));\n                if ((process.env.NODE_ENV !== 'production') && true) {\n                    validateBrowserExpression(result.index, context, true);\n                }\n            }\n        }\n    }\n    if (valueContent) {\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\n        if ((process.env.NODE_ENV !== 'production') && true) {\n            validateBrowserExpression(result.value, context, true);\n        }\n    }\n    return result;\n}\nfunction createAliasExpression(range, content, offset) {\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\n}\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\n    return createParamsList([value, key, index, ...memoArgs]);\n}\nfunction createParamsList(args) {\n    let i = args.length;\n    while (i--) {\n        if (args[i])\n            break;\n    }\n    return args\n        .slice(0, i + 1)\n        .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false));\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\n// A NodeTransform that:\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\n//    by transformExpression. This is only applied in non-browser builds with\n//    { prefixIdentifiers: true }.\n// 2. Track v-slot depths so that we know a slot is inside another slot.\n//    Note the exit callback is executed before buildSlots() on the same node,\n//    so only nested slots see positive numbers.\nconst trackSlotScopes = (node, context) => {\n    if (node.type === 1 /* ELEMENT */ &&\n        (node.tagType === 1 /* COMPONENT */ ||\n            node.tagType === 3 /* TEMPLATE */)) {\n        // We are only checking non-empty v-slot here\n        // since we only care about slots that introduce scope variables.\n        const vSlot = findDir(node, 'slot');\n        if (vSlot) {\n            vSlot.exp;\n            context.scopes.vSlot++;\n            return () => {\n                context.scopes.vSlot--;\n            };\n        }\n    }\n};\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\nconst trackVForSlotScopes = (node, context) => {\n    let vFor;\n    if (isTemplateNode(node) &&\n        node.props.some(isVSlot) &&\n        (vFor = findDir(node, 'for'))) {\n        const result = (vFor.parseResult = parseForExpression(vFor.exp, context));\n        if (result) {\n            const { value, key, index } = result;\n            const { addIdentifiers, removeIdentifiers } = context;\n            value && addIdentifiers(value);\n            key && addIdentifiers(key);\n            index && addIdentifiers(index);\n            return () => {\n                value && removeIdentifiers(value);\n                key && removeIdentifiers(key);\n                index && removeIdentifiers(index);\n            };\n        }\n    }\n};\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\n// Instead of being a DirectiveTransform, v-slot processing is called during\n// transformElement to build the slots object for a component.\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\n    context.helper(WITH_CTX);\n    const { children, loc } = node;\n    const slotsProperties = [];\n    const dynamicSlots = [];\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\n    // since it likely uses a scope variable.\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\n    // 1. Check for slot with slotProps on component itself.\n    //    <Comp v-slot=\"{ prop }\"/>\n    const onComponentSlot = findDir(node, 'slot', true);\n    if (onComponentSlot) {\n        const { arg, exp } = onComponentSlot;\n        if (arg && !isStaticExp(arg)) {\n            hasDynamicSlots = true;\n        }\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\n    }\n    // 2. Iterate through children and check for template slots\n    //    <template v-slot:foo=\"{ prop }\">\n    let hasTemplateSlots = false;\n    let hasNamedDefaultSlot = false;\n    const implicitDefaultChildren = [];\n    const seenSlotNames = new Set();\n    for (let i = 0; i < children.length; i++) {\n        const slotElement = children[i];\n        let slotDir;\n        if (!isTemplateNode(slotElement) ||\n            !(slotDir = findDir(slotElement, 'slot', true))) {\n            // not a <template v-slot>, skip.\n            if (slotElement.type !== 3 /* COMMENT */) {\n                implicitDefaultChildren.push(slotElement);\n            }\n            continue;\n        }\n        if (onComponentSlot) {\n            // already has on-component slot - this is incorrect usage.\n            context.onError(createCompilerError(37 /* X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\n            break;\n        }\n        hasTemplateSlots = true;\n        const { children: slotChildren, loc: slotLoc } = slotElement;\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\n        // check if name is dynamic.\n        let staticSlotName;\n        if (isStaticExp(slotName)) {\n            staticSlotName = slotName ? slotName.content : `default`;\n        }\n        else {\n            hasDynamicSlots = true;\n        }\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\n        // check if this slot is conditional (v-if/v-for)\n        let vIf;\n        let vElse;\n        let vFor;\n        if ((vIf = findDir(slotElement, 'if'))) {\n            hasDynamicSlots = true;\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback));\n        }\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\n            // find adjacent v-if\n            let j = i;\n            let prev;\n            while (j--) {\n                prev = children[j];\n                if (prev.type !== 3 /* COMMENT */) {\n                    break;\n                }\n            }\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\n                // remove node\n                children.splice(i, 1);\n                i--;\n                // attach this slot to previous conditional\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\n                while (conditional.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\n                    conditional = conditional.alternate;\n                }\n                conditional.alternate = vElse.exp\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback)\n                    : buildDynamicSlot(slotName, slotFunction);\n            }\n            else {\n                context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\n            }\n        }\n        else if ((vFor = findDir(slotElement, 'for'))) {\n            hasDynamicSlots = true;\n            const parseResult = vFor.parseResult ||\n                parseForExpression(vFor.exp, context);\n            if (parseResult) {\n                // Render the dynamic slots as an array and add it to the createSlot()\n                // args. The runtime knows how to handle it appropriately.\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\n                    parseResult.source,\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\n                ]));\n            }\n            else {\n                context.onError(createCompilerError(32 /* X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\n            }\n        }\n        else {\n            // check duplicate static names\n            if (staticSlotName) {\n                if (seenSlotNames.has(staticSlotName)) {\n                    context.onError(createCompilerError(38 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\n                    continue;\n                }\n                seenSlotNames.add(staticSlotName);\n                if (staticSlotName === 'default') {\n                    hasNamedDefaultSlot = true;\n                }\n            }\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\n        }\n    }\n    if (!onComponentSlot) {\n        const buildDefaultSlotProperty = (props, children) => {\n            const fn = buildSlotFn(props, children, loc);\n            if (context.compatConfig) {\n                fn.isNonScopedSlot = true;\n            }\n            return createObjectProperty(`default`, fn);\n        };\n        if (!hasTemplateSlots) {\n            // implicit default slot (on component)\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\n        }\n        else if (implicitDefaultChildren.length &&\n            // #3766\n            // with whitespace: 'preserve', whitespaces between slots will end up in\n            // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n            implicitDefaultChildren.some(node => isNonWhitespaceContent(node))) {\n            // implicit default slot (mixed with named slots)\n            if (hasNamedDefaultSlot) {\n                context.onError(createCompilerError(39 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\n            }\n            else {\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\n            }\n        }\n    }\n    const slotFlag = hasDynamicSlots\n        ? 2 /* DYNAMIC */\n        : hasForwardedSlots(node.children)\n            ? 3 /* FORWARDED */\n            : 1 /* STABLE */;\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, \n    // 2 = compiled but dynamic = can skip normalization, but must run diff\n    // 1 = compiled and static = can skip normalization AND diff as optimized\n    createSimpleExpression(slotFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${slotFlagsText[slotFlag]} */` : ``), false))), loc);\n    if (dynamicSlots.length) {\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\n            slots,\n            createArrayExpression(dynamicSlots)\n        ]);\n    }\n    return {\n        slots,\n        hasDynamicSlots\n    };\n}\nfunction buildDynamicSlot(name, fn) {\n    return createObjectExpression([\n        createObjectProperty(`name`, name),\n        createObjectProperty(`fn`, fn)\n    ]);\n}\nfunction hasForwardedSlots(children) {\n    for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        switch (child.type) {\n            case 1 /* ELEMENT */:\n                if (child.tagType === 2 /* SLOT */ ||\n                    hasForwardedSlots(child.children)) {\n                    return true;\n                }\n                break;\n            case 9 /* IF */:\n                if (hasForwardedSlots(child.branches))\n                    return true;\n                break;\n            case 10 /* IF_BRANCH */:\n            case 11 /* FOR */:\n                if (hasForwardedSlots(child.children))\n                    return true;\n                break;\n        }\n    }\n    return false;\n}\nfunction isNonWhitespaceContent(node) {\n    if (node.type !== 2 /* TEXT */ && node.type !== 12 /* TEXT_CALL */)\n        return true;\n    return node.type === 2 /* TEXT */\n        ? !!node.content.trim()\n        : isNonWhitespaceContent(node.content);\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\n// import, which should be used instead of a resolveDirective call.\nconst directiveImportMap = new WeakMap();\n// generate a JavaScript AST for this element's codegen\nconst transformElement = (node, context) => {\n    // perform the work on exit, after all child expressions have been\n    // processed and merged.\n    return function postTransformElement() {\n        node = context.currentNode;\n        if (!(node.type === 1 /* ELEMENT */ &&\n            (node.tagType === 0 /* ELEMENT */ ||\n                node.tagType === 1 /* COMPONENT */))) {\n            return;\n        }\n        const { tag, props } = node;\n        const isComponent = node.tagType === 1 /* COMPONENT */;\n        // The goal of the transform is to create a codegenNode implementing the\n        // VNodeCall interface.\n        let vnodeTag = isComponent\n            ? resolveComponentType(node, context)\n            : `\"${tag}\"`;\n        const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\n        let vnodeProps;\n        let vnodeChildren;\n        let vnodePatchFlag;\n        let patchFlag = 0;\n        let vnodeDynamicProps;\n        let dynamicPropNames;\n        let vnodeDirectives;\n        let shouldUseBlock = \n        // dynamic component may resolve to plain elements\n        isDynamicComponent ||\n            vnodeTag === TELEPORT ||\n            vnodeTag === SUSPENSE ||\n            (!isComponent &&\n                // <svg> and <foreignObject> must be forced into blocks so that block\n                // updates inside get proper isSVG flag at runtime. (#639, #643)\n                // This is technically web-specific, but splitting the logic out of core\n                // leads to too much unnecessary complexity.\n                (tag === 'svg' || tag === 'foreignObject'));\n        // props\n        if (props.length > 0) {\n            const propsBuildResult = buildProps(node, context, undefined, isComponent, isDynamicComponent);\n            vnodeProps = propsBuildResult.props;\n            patchFlag = propsBuildResult.patchFlag;\n            dynamicPropNames = propsBuildResult.dynamicPropNames;\n            const directives = propsBuildResult.directives;\n            vnodeDirectives =\n                directives && directives.length\n                    ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context)))\n                    : undefined;\n            if (propsBuildResult.shouldUseBlock) {\n                shouldUseBlock = true;\n            }\n        }\n        // children\n        if (node.children.length > 0) {\n            if (vnodeTag === KEEP_ALIVE) {\n                // Although a built-in component, we compile KeepAlive with raw children\n                // instead of slot functions so that it can be used inside Transition\n                // or other Transition-wrapping HOCs.\n                // To ensure correct updates with block optimizations, we need to:\n                // 1. Force keep-alive into a block. This avoids its children being\n                //    collected by a parent block.\n                shouldUseBlock = true;\n                // 2. Force keep-alive to always be updated, since it uses raw children.\n                patchFlag |= 1024 /* DYNAMIC_SLOTS */;\n                if ((process.env.NODE_ENV !== 'production') && node.children.length > 1) {\n                    context.onError(createCompilerError(45 /* X_KEEP_ALIVE_INVALID_CHILDREN */, {\n                        start: node.children[0].loc.start,\n                        end: node.children[node.children.length - 1].loc.end,\n                        source: ''\n                    }));\n                }\n            }\n            const shouldBuildAsSlots = isComponent &&\n                // Teleport is not a real component and has dedicated runtime handling\n                vnodeTag !== TELEPORT &&\n                // explained above.\n                vnodeTag !== KEEP_ALIVE;\n            if (shouldBuildAsSlots) {\n                const { slots, hasDynamicSlots } = buildSlots(node, context);\n                vnodeChildren = slots;\n                if (hasDynamicSlots) {\n                    patchFlag |= 1024 /* DYNAMIC_SLOTS */;\n                }\n            }\n            else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n                const child = node.children[0];\n                const type = child.type;\n                // check for dynamic text children\n                const hasDynamicTextChild = type === 5 /* INTERPOLATION */ ||\n                    type === 8 /* COMPOUND_EXPRESSION */;\n                if (hasDynamicTextChild &&\n                    getConstantType(child, context) === 0 /* NOT_CONSTANT */) {\n                    patchFlag |= 1 /* TEXT */;\n                }\n                // pass directly if the only child is a text node\n                // (plain / interpolation / expression)\n                if (hasDynamicTextChild || type === 2 /* TEXT */) {\n                    vnodeChildren = child;\n                }\n                else {\n                    vnodeChildren = node.children;\n                }\n            }\n            else {\n                vnodeChildren = node.children;\n            }\n        }\n        // patchFlag & dynamicPropNames\n        if (patchFlag !== 0) {\n            if ((process.env.NODE_ENV !== 'production')) {\n                if (patchFlag < 0) {\n                    // special flags (negative and mutually exclusive)\n                    vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\n                }\n                else {\n                    // bitwise flags\n                    const flagNames = Object.keys(PatchFlagNames)\n                        .map(Number)\n                        .filter(n => n > 0 && patchFlag & n)\n                        .map(n => PatchFlagNames[n])\n                        .join(`, `);\n                    vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\n                }\n            }\n            else {\n                vnodePatchFlag = String(patchFlag);\n            }\n            if (dynamicPropNames && dynamicPropNames.length) {\n                vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\n            }\n        }\n        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, isComponent, node.loc);\n    };\n};\nfunction resolveComponentType(node, context, ssr = false) {\n    let { tag } = node;\n    // 1. dynamic component\n    const isExplicitDynamic = isComponentTag(tag);\n    const isProp = findProp(node, 'is');\n    if (isProp) {\n        if (isExplicitDynamic ||\n            (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context))) {\n            const exp = isProp.type === 6 /* ATTRIBUTE */\n                ? isProp.value && createSimpleExpression(isProp.value.content, true)\n                : isProp.exp;\n            if (exp) {\n                return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n                    exp\n                ]);\n            }\n        }\n        else if (isProp.type === 6 /* ATTRIBUTE */ &&\n            isProp.value.content.startsWith('vue:')) {\n            // <button is=\"vue:xxx\">\n            // if not <component>, only is value that starts with \"vue:\" will be\n            // treated as component by the parse phase and reach here, unless it's\n            // compat mode where all is values are considered components\n            tag = isProp.value.content.slice(4);\n        }\n    }\n    // 1.5 v-is (TODO: Deprecate)\n    const isDir = !isExplicitDynamic && findDir(node, 'is');\n    if (isDir && isDir.exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n            isDir.exp\n        ]);\n    }\n    // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\n    const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\n    if (builtIn) {\n        // built-ins are simply fallthroughs / have special handling during ssr\n        // so we don't need to import their runtime equivalents\n        if (!ssr)\n            context.helper(builtIn);\n        return builtIn;\n    }\n    // 5. user component (resolve)\n    context.helper(RESOLVE_COMPONENT);\n    context.components.add(tag);\n    return toValidAssetId(tag, `component`);\n}\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\n    const { tag, loc: elementLoc, children } = node;\n    let properties = [];\n    const mergeArgs = [];\n    const runtimeDirectives = [];\n    const hasChildren = children.length > 0;\n    let shouldUseBlock = false;\n    // patchFlag analysis\n    let patchFlag = 0;\n    let hasRef = false;\n    let hasClassBinding = false;\n    let hasStyleBinding = false;\n    let hasHydrationEventBinding = false;\n    let hasDynamicKeys = false;\n    let hasVnodeHook = false;\n    const dynamicPropNames = [];\n    const analyzePatchFlag = ({ key, value }) => {\n        if (isStaticExp(key)) {\n            const name = key.content;\n            const isEventHandler = isOn(name);\n            if (isEventHandler &&\n                (!isComponent || isDynamicComponent) &&\n                // omit the flag for click handlers because hydration gives click\n                // dedicated fast path.\n                name.toLowerCase() !== 'onclick' &&\n                // omit v-model handlers\n                name !== 'onUpdate:modelValue' &&\n                // omit onVnodeXXX hooks\n                !isReservedProp(name)) {\n                hasHydrationEventBinding = true;\n            }\n            if (isEventHandler && isReservedProp(name)) {\n                hasVnodeHook = true;\n            }\n            if (value.type === 20 /* JS_CACHE_EXPRESSION */ ||\n                ((value.type === 4 /* SIMPLE_EXPRESSION */ ||\n                    value.type === 8 /* COMPOUND_EXPRESSION */) &&\n                    getConstantType(value, context) > 0)) {\n                // skip if the prop is a cached handler or has constant value\n                return;\n            }\n            if (name === 'ref') {\n                hasRef = true;\n            }\n            else if (name === 'class') {\n                hasClassBinding = true;\n            }\n            else if (name === 'style') {\n                hasStyleBinding = true;\n            }\n            else if (name !== 'key' && !dynamicPropNames.includes(name)) {\n                dynamicPropNames.push(name);\n            }\n            // treat the dynamic class and style binding of the component as dynamic props\n            if (isComponent &&\n                (name === 'class' || name === 'style') &&\n                !dynamicPropNames.includes(name)) {\n                dynamicPropNames.push(name);\n            }\n        }\n        else {\n            hasDynamicKeys = true;\n        }\n    };\n    for (let i = 0; i < props.length; i++) {\n        // static attribute\n        const prop = props[i];\n        if (prop.type === 6 /* ATTRIBUTE */) {\n            const { loc, name, value } = prop;\n            let isStatic = true;\n            if (name === 'ref') {\n                hasRef = true;\n                if (context.scopes.vFor > 0) {\n                    properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\n                }\n            }\n            // skip is on <component>, or is=\"vue:xxx\"\n            if (name === 'is' &&\n                (isComponentTag(tag) ||\n                    (value && value.content.startsWith('vue:')) ||\n                    (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context)))) {\n                continue;\n            }\n            properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', isStatic, value ? value.loc : loc)));\n        }\n        else {\n            // directives\n            const { name, arg, exp, loc } = prop;\n            const isVBind = name === 'bind';\n            const isVOn = name === 'on';\n            // skip v-slot - it is handled by its dedicated transform.\n            if (name === 'slot') {\n                if (!isComponent) {\n                    context.onError(createCompilerError(40 /* X_V_SLOT_MISPLACED */, loc));\n                }\n                continue;\n            }\n            // skip v-once/v-memo - they are handled by dedicated transforms.\n            if (name === 'once' || name === 'memo') {\n                continue;\n            }\n            // skip v-is and :is on <component>\n            if (name === 'is' ||\n                (isVBind &&\n                    isStaticArgOf(arg, 'is') &&\n                    (isComponentTag(tag) ||\n                        (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context))))) {\n                continue;\n            }\n            // skip v-on in SSR compilation\n            if (isVOn && ssr) {\n                continue;\n            }\n            if (\n            // #938: elements with dynamic keys should be forced into blocks\n            (isVBind && isStaticArgOf(arg, 'key')) ||\n                // inline before-update hooks need to force block so that it is invoked\n                // before children\n                (isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update'))) {\n                shouldUseBlock = true;\n            }\n            if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\n                properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\n            }\n            // special case for v-bind and v-on with no argument\n            if (!arg && (isVBind || isVOn)) {\n                hasDynamicKeys = true;\n                if (exp) {\n                    if (properties.length) {\n                        mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\n                        properties = [];\n                    }\n                    if (isVBind) {\n                        {\n                            // 2.x v-bind object order compat\n                            if ((process.env.NODE_ENV !== 'production')) {\n                                const hasOverridableKeys = mergeArgs.some(arg => {\n                                    if (arg.type === 15 /* JS_OBJECT_EXPRESSION */) {\n                                        return arg.properties.some(({ key }) => {\n                                            if (key.type !== 4 /* SIMPLE_EXPRESSION */ ||\n                                                !key.isStatic) {\n                                                return true;\n                                            }\n                                            return (key.content !== 'class' &&\n                                                key.content !== 'style' &&\n                                                !isOn(key.content));\n                                        });\n                                    }\n                                    else {\n                                        // dynamic expression\n                                        return true;\n                                    }\n                                });\n                                if (hasOverridableKeys) {\n                                    checkCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */, context, loc);\n                                }\n                            }\n                            if (isCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */, context)) {\n                                mergeArgs.unshift(exp);\n                                continue;\n                            }\n                        }\n                        mergeArgs.push(exp);\n                    }\n                    else {\n                        // v-on=\"obj\" -> toHandlers(obj)\n                        mergeArgs.push({\n                            type: 14 /* JS_CALL_EXPRESSION */,\n                            loc,\n                            callee: context.helper(TO_HANDLERS),\n                            arguments: [exp]\n                        });\n                    }\n                }\n                else {\n                    context.onError(createCompilerError(isVBind\n                        ? 34 /* X_V_BIND_NO_EXPRESSION */\n                        : 35 /* X_V_ON_NO_EXPRESSION */, loc));\n                }\n                continue;\n            }\n            const directiveTransform = context.directiveTransforms[name];\n            if (directiveTransform) {\n                // has built-in directive transform.\n                const { props, needRuntime } = directiveTransform(prop, node, context);\n                !ssr && props.forEach(analyzePatchFlag);\n                properties.push(...props);\n                if (needRuntime) {\n                    runtimeDirectives.push(prop);\n                    if (isSymbol(needRuntime)) {\n                        directiveImportMap.set(prop, needRuntime);\n                    }\n                }\n            }\n            else if (!isBuiltInDirective(name)) {\n                // no built-in transform, this is a user custom directive.\n                runtimeDirectives.push(prop);\n                // custom dirs may use beforeUpdate so they need to force blocks\n                // to ensure before-update gets called before children update\n                if (hasChildren) {\n                    shouldUseBlock = true;\n                }\n            }\n        }\n    }\n    let propsExpression = undefined;\n    // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\n    if (mergeArgs.length) {\n        if (properties.length) {\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\n        }\n        if (mergeArgs.length > 1) {\n            propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\n        }\n        else {\n            // single v-bind with nothing else - no need for a mergeProps call\n            propsExpression = mergeArgs[0];\n        }\n    }\n    else if (properties.length) {\n        propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\n    }\n    // patchFlag analysis\n    if (hasDynamicKeys) {\n        patchFlag |= 16 /* FULL_PROPS */;\n    }\n    else {\n        if (hasClassBinding && !isComponent) {\n            patchFlag |= 2 /* CLASS */;\n        }\n        if (hasStyleBinding && !isComponent) {\n            patchFlag |= 4 /* STYLE */;\n        }\n        if (dynamicPropNames.length) {\n            patchFlag |= 8 /* PROPS */;\n        }\n        if (hasHydrationEventBinding) {\n            patchFlag |= 32 /* HYDRATE_EVENTS */;\n        }\n    }\n    if (!shouldUseBlock &&\n        (patchFlag === 0 || patchFlag === 32 /* HYDRATE_EVENTS */) &&\n        (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\n        patchFlag |= 512 /* NEED_PATCH */;\n    }\n    // pre-normalize props, SSR is skipped for now\n    if (!context.inSSR && propsExpression) {\n        switch (propsExpression.type) {\n            case 15 /* JS_OBJECT_EXPRESSION */:\n                // means that there is no v-bind,\n                // but still need to deal with dynamic key binding\n                let classKeyIndex = -1;\n                let styleKeyIndex = -1;\n                let hasDynamicKey = false;\n                for (let i = 0; i < propsExpression.properties.length; i++) {\n                    const key = propsExpression.properties[i].key;\n                    if (isStaticExp(key)) {\n                        if (key.content === 'class') {\n                            classKeyIndex = i;\n                        }\n                        else if (key.content === 'style') {\n                            styleKeyIndex = i;\n                        }\n                    }\n                    else if (!key.isHandlerKey) {\n                        hasDynamicKey = true;\n                    }\n                }\n                const classProp = propsExpression.properties[classKeyIndex];\n                const styleProp = propsExpression.properties[styleKeyIndex];\n                // no dynamic key\n                if (!hasDynamicKey) {\n                    if (classProp && !isStaticExp(classProp.value)) {\n                        classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);\n                    }\n                    if (styleProp &&\n                        // the static style is compiled into an object,\n                        // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n                        (hasStyleBinding ||\n                            (styleProp.value.type === 4 /* SIMPLE_EXPRESSION */ &&\n                                styleProp.value.content.trim()[0] === `[`) ||\n                            // v-bind:style and style both exist,\n                            // v-bind:style with static literal object\n                            styleProp.value.type === 17 /* JS_ARRAY_EXPRESSION */)) {\n                        styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);\n                    }\n                }\n                else {\n                    // dynamic key binding, wrap with `normalizeProps`\n                    propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);\n                }\n                break;\n            case 14 /* JS_CALL_EXPRESSION */:\n                // mergeProps call, do nothing\n                break;\n            default:\n                // single v-bind\n                propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [\n                    createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\n                        propsExpression\n                    ])\n                ]);\n                break;\n        }\n    }\n    return {\n        props: propsExpression,\n        directives: runtimeDirectives,\n        patchFlag,\n        dynamicPropNames,\n        shouldUseBlock\n    };\n}\n// Dedupe props in an object literal.\n// Literal duplicated attributes would have been warned during the parse phase,\n// however, it's possible to encounter duplicated `onXXX` handlers with different\n// modifiers. We also need to merge static and dynamic class / style attributes.\n// - onXXX handlers / style: merge into array\n// - class: merge into single expression with concatenation\nfunction dedupeProperties(properties) {\n    const knownProps = new Map();\n    const deduped = [];\n    for (let i = 0; i < properties.length; i++) {\n        const prop = properties[i];\n        // dynamic keys are always allowed\n        if (prop.key.type === 8 /* COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\n            deduped.push(prop);\n            continue;\n        }\n        const name = prop.key.content;\n        const existing = knownProps.get(name);\n        if (existing) {\n            if (name === 'style' || name === 'class' || isOn(name)) {\n                mergeAsArray(existing, prop);\n            }\n            // unexpected duplicate, should have emitted error during parse\n        }\n        else {\n            knownProps.set(name, prop);\n            deduped.push(prop);\n        }\n    }\n    return deduped;\n}\nfunction mergeAsArray(existing, incoming) {\n    if (existing.value.type === 17 /* JS_ARRAY_EXPRESSION */) {\n        existing.value.elements.push(incoming.value);\n    }\n    else {\n        existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\n    }\n}\nfunction buildDirectiveArgs(dir, context) {\n    const dirArgs = [];\n    const runtime = directiveImportMap.get(dir);\n    if (runtime) {\n        // built-in directive with runtime\n        dirArgs.push(context.helperString(runtime));\n    }\n    else {\n        {\n            // inject statement for resolving directive\n            context.helper(RESOLVE_DIRECTIVE);\n            context.directives.add(dir.name);\n            dirArgs.push(toValidAssetId(dir.name, `directive`));\n        }\n    }\n    const { loc } = dir;\n    if (dir.exp)\n        dirArgs.push(dir.exp);\n    if (dir.arg) {\n        if (!dir.exp) {\n            dirArgs.push(`void 0`);\n        }\n        dirArgs.push(dir.arg);\n    }\n    if (Object.keys(dir.modifiers).length) {\n        if (!dir.arg) {\n            if (!dir.exp) {\n                dirArgs.push(`void 0`);\n            }\n            dirArgs.push(`void 0`);\n        }\n        const trueExpression = createSimpleExpression(`true`, false, loc);\n        dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\n    }\n    return createArrayExpression(dirArgs, dir.loc);\n}\nfunction stringifyDynamicPropNames(props) {\n    let propsNamesString = `[`;\n    for (let i = 0, l = props.length; i < l; i++) {\n        propsNamesString += JSON.stringify(props[i]);\n        if (i < l - 1)\n            propsNamesString += ', ';\n    }\n    return propsNamesString + `]`;\n}\nfunction isComponentTag(tag) {\n    return tag === 'component' || tag === 'Component';\n}\n\n(process.env.NODE_ENV !== 'production')\n    ? Object.freeze({})\n    : {};\n(process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\nconst cacheStringFunction = (fn) => {\n    const cache = Object.create(null);\n    return ((str) => {\n        const hit = cache[str];\n        return hit || (cache[str] = fn(str));\n    });\n};\nconst camelizeRE = /-(\\w)/g;\n/**\n * @private\n */\nconst camelize = cacheStringFunction((str) => {\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\n});\n\nconst transformSlotOutlet = (node, context) => {\n    if (isSlotOutlet(node)) {\n        const { children, loc } = node;\n        const { slotName, slotProps } = processSlotOutlet(node, context);\n        const slotArgs = [\n            context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\n            slotName,\n            '{}',\n            'undefined',\n            'true'\n        ];\n        let expectedLen = 2;\n        if (slotProps) {\n            slotArgs[2] = slotProps;\n            expectedLen = 3;\n        }\n        if (children.length) {\n            slotArgs[3] = createFunctionExpression([], children, false, false, loc);\n            expectedLen = 4;\n        }\n        if (context.scopeId && !context.slotted) {\n            expectedLen = 5;\n        }\n        slotArgs.splice(expectedLen); // remove unused arguments\n        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\n    }\n};\nfunction processSlotOutlet(node, context) {\n    let slotName = `\"default\"`;\n    let slotProps = undefined;\n    const nonNameProps = [];\n    for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 6 /* ATTRIBUTE */) {\n            if (p.value) {\n                if (p.name === 'name') {\n                    slotName = JSON.stringify(p.value.content);\n                }\n                else {\n                    p.name = camelize(p.name);\n                    nonNameProps.push(p);\n                }\n            }\n        }\n        else {\n            if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\n                if (p.exp)\n                    slotName = p.exp;\n            }\n            else {\n                if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\n                    p.arg.content = camelize(p.arg.content);\n                }\n                nonNameProps.push(p);\n            }\n        }\n    }\n    if (nonNameProps.length > 0) {\n        const { props, directives } = buildProps(node, context, nonNameProps, false, false);\n        slotProps = props;\n        if (directives.length) {\n            context.onError(createCompilerError(36 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\n        }\n    }\n    return {\n        slotName,\n        slotProps\n    };\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\nconst transformOn = (dir, node, context, augmentor) => {\n    const { loc, modifiers, arg } = dir;\n    if (!dir.exp && !modifiers.length) {\n        context.onError(createCompilerError(35 /* X_V_ON_NO_EXPRESSION */, loc));\n    }\n    let eventName;\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\n        if (arg.isStatic) {\n            let rawName = arg.content;\n            // TODO deprecate @vnodeXXX usage\n            if (rawName.startsWith('vue:')) {\n                rawName = `vnode-${rawName.slice(4)}`;\n            }\n            // for all event listeners, auto convert it to camelCase. See issue #2249\n            eventName = createSimpleExpression(toHandlerKey(camelize$1(rawName)), true, arg.loc);\n        }\n        else {\n            // #2388\n            eventName = createCompoundExpression([\n                `${context.helperString(TO_HANDLER_KEY)}(`,\n                arg,\n                `)`\n            ]);\n        }\n    }\n    else {\n        // already a compound expression.\n        eventName = arg;\n        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\n        eventName.children.push(`)`);\n    }\n    // handler processing\n    let exp = dir.exp;\n    if (exp && !exp.content.trim()) {\n        exp = undefined;\n    }\n    let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\n    if (exp) {\n        const isMemberExp = isMemberExpression(exp.content);\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\n        const hasMultipleStatements = exp.content.includes(`;`);\n        if ((process.env.NODE_ENV !== 'production') && true) {\n            validateBrowserExpression(exp, context, false, hasMultipleStatements);\n        }\n        if (isInlineStatement || (shouldCache && isMemberExp)) {\n            // wrap inline statement in a function expression\n            exp = createCompoundExpression([\n                `${isInlineStatement\n                    ? `$event`\n                    : `${``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\n                exp,\n                hasMultipleStatements ? `}` : `)`\n            ]);\n        }\n    }\n    let ret = {\n        props: [\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\n        ]\n    };\n    // apply extended compiler augmentor\n    if (augmentor) {\n        ret = augmentor(ret);\n    }\n    if (shouldCache) {\n        // cache handlers so that it's always the same handler being passed down.\n        // this avoids unnecessary re-renders when users use inline handlers on\n        // components.\n        ret.props[0].value = context.cache(ret.props[0].value);\n    }\n    // mark the key as handler for props normalization check\n    ret.props.forEach(p => (p.key.isHandlerKey = true));\n    return ret;\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\n// codegen for the entire props object. This transform here is only for v-bind\n// *with* args.\nconst transformBind = (dir, _node, context) => {\n    const { exp, modifiers, loc } = dir;\n    const arg = dir.arg;\n    if (arg.type !== 4 /* SIMPLE_EXPRESSION */) {\n        arg.children.unshift(`(`);\n        arg.children.push(`) || \"\"`);\n    }\n    else if (!arg.isStatic) {\n        arg.content = `${arg.content} || \"\"`;\n    }\n    // .sync is replaced by v-model:arg\n    if (modifiers.includes('camel')) {\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\n            if (arg.isStatic) {\n                arg.content = camelize$1(arg.content);\n            }\n            else {\n                arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\n            }\n        }\n        else {\n            arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\n            arg.children.push(`)`);\n        }\n    }\n    if (!context.inSSR) {\n        if (modifiers.includes('prop')) {\n            injectPrefix(arg, '.');\n        }\n        if (modifiers.includes('attr')) {\n            injectPrefix(arg, '^');\n        }\n    }\n    if (!exp ||\n        (exp.type === 4 /* SIMPLE_EXPRESSION */ && !exp.content.trim())) {\n        context.onError(createCompilerError(34 /* X_V_BIND_NO_EXPRESSION */, loc));\n        return {\n            props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\n        };\n    }\n    return {\n        props: [createObjectProperty(arg, exp)]\n    };\n};\nconst injectPrefix = (arg, prefix) => {\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\n        if (arg.isStatic) {\n            arg.content = prefix + arg.content;\n        }\n        else {\n            arg.content = `\\`${prefix}\\${${arg.content}}\\``;\n        }\n    }\n    else {\n        arg.children.unshift(`'${prefix}' + (`);\n        arg.children.push(`)`);\n    }\n};\n\n// Merge adjacent text nodes and expressions into a single expression\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\nconst transformText = (node, context) => {\n    if (node.type === 0 /* ROOT */ ||\n        node.type === 1 /* ELEMENT */ ||\n        node.type === 11 /* FOR */ ||\n        node.type === 10 /* IF_BRANCH */) {\n        // perform the transform on node exit so that all expressions have already\n        // been processed.\n        return () => {\n            const children = node.children;\n            let currentContainer = undefined;\n            let hasText = false;\n            for (let i = 0; i < children.length; i++) {\n                const child = children[i];\n                if (isText(child)) {\n                    hasText = true;\n                    for (let j = i + 1; j < children.length; j++) {\n                        const next = children[j];\n                        if (isText(next)) {\n                            if (!currentContainer) {\n                                currentContainer = children[i] = createCompoundExpression([child], child.loc);\n                            }\n                            // merge adjacent text node into current\n                            currentContainer.children.push(` + `, next);\n                            children.splice(j, 1);\n                            j--;\n                        }\n                        else {\n                            currentContainer = undefined;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!hasText ||\n                // if this is a plain element with a single text child, leave it\n                // as-is since the runtime has dedicated fast path for this by directly\n                // setting textContent of the element.\n                // for component root it's always normalized anyway.\n                (children.length === 1 &&\n                    (node.type === 0 /* ROOT */ ||\n                        (node.type === 1 /* ELEMENT */ &&\n                            node.tagType === 0 /* ELEMENT */ &&\n                            // #3756\n                            // custom directives can potentially add DOM elements arbitrarily,\n                            // we need to avoid setting textContent of the element at runtime\n                            // to avoid accidentally overwriting the DOM elements added\n                            // by the user through custom directives.\n                            !node.props.find(p => p.type === 7 /* DIRECTIVE */ &&\n                                !context.directiveTransforms[p.name]) &&\n                            // in compat mode, <template> tags with no special directives\n                            // will be rendered as a fragment so its children must be\n                            // converted into vnodes.\n                            !(node.tag === 'template'))))) {\n                return;\n            }\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\n            // runtime normalization.\n            for (let i = 0; i < children.length; i++) {\n                const child = children[i];\n                if (isText(child) || child.type === 8 /* COMPOUND_EXPRESSION */) {\n                    const callArgs = [];\n                    // createTextVNode defaults to single whitespace, so if it is a\n                    // single space the code could be an empty call to save bytes.\n                    if (child.type !== 2 /* TEXT */ || child.content !== ' ') {\n                        callArgs.push(child);\n                    }\n                    // mark dynamic text with flag so it gets patched inside a block\n                    if (!context.ssr &&\n                        getConstantType(child, context) === 0 /* NOT_CONSTANT */) {\n                        callArgs.push(1 /* TEXT */ +\n                            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[1 /* TEXT */]} */` : ``));\n                    }\n                    children[i] = {\n                        type: 12 /* TEXT_CALL */,\n                        content: child,\n                        loc: child.loc,\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\n                    };\n                }\n            }\n        };\n    }\n};\n\nconst seen = new WeakSet();\nconst transformOnce = (node, context) => {\n    if (node.type === 1 /* ELEMENT */ && findDir(node, 'once', true)) {\n        if (seen.has(node) || context.inVOnce) {\n            return;\n        }\n        seen.add(node);\n        context.inVOnce = true;\n        context.helper(SET_BLOCK_TRACKING);\n        return () => {\n            context.inVOnce = false;\n            const cur = context.currentNode;\n            if (cur.codegenNode) {\n                cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\n            }\n        };\n    }\n};\n\nconst transformModel = (dir, node, context) => {\n    const { exp, arg } = dir;\n    if (!exp) {\n        context.onError(createCompilerError(41 /* X_V_MODEL_NO_EXPRESSION */, dir.loc));\n        return createTransformProps();\n    }\n    const rawExp = exp.loc.source;\n    const expString = exp.type === 4 /* SIMPLE_EXPRESSION */ ? exp.content : rawExp;\n    // im SFC <script setup> inline mode, the exp may have been transformed into\n    // _unref(exp)\n    context.bindingMetadata[rawExp];\n    const maybeRef = !true    /* SETUP_CONST */;\n    if (!expString.trim() ||\n        (!isMemberExpression(expString) && !maybeRef)) {\n        context.onError(createCompilerError(42 /* X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\n        return createTransformProps();\n    }\n    const propName = arg ? arg : createSimpleExpression('modelValue', true);\n    const eventName = arg\n        ? isStaticExp(arg)\n            ? `onUpdate:${arg.content}`\n            : createCompoundExpression(['\"onUpdate:\" + ', arg])\n        : `onUpdate:modelValue`;\n    let assignmentExp;\n    const eventArg = context.isTS ? `($event: any)` : `$event`;\n    {\n        assignmentExp = createCompoundExpression([\n            `${eventArg} => ((`,\n            exp,\n            `) = $event)`\n        ]);\n    }\n    const props = [\n        // modelValue: foo\n        createObjectProperty(propName, dir.exp),\n        // \"onUpdate:modelValue\": $event => (foo = $event)\n        createObjectProperty(eventName, assignmentExp)\n    ];\n    // modelModifiers: { foo: true, \"bar-baz\": true }\n    if (dir.modifiers.length && node.tagType === 1 /* COMPONENT */) {\n        const modifiers = dir.modifiers\n            .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\n            .join(`, `);\n        const modifiersKey = arg\n            ? isStaticExp(arg)\n                ? `${arg.content}Modifiers`\n                : createCompoundExpression([arg, ' + \"Modifiers\"'])\n            : `modelModifiers`;\n        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2 /* CAN_HOIST */)));\n    }\n    return createTransformProps(props);\n};\nfunction createTransformProps(props = []) {\n    return { props };\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\nconst transformFilter = (node, context) => {\n    if (!isCompatEnabled(\"COMPILER_FILTER\" /* COMPILER_FILTERS */, context)) {\n        return;\n    }\n    if (node.type === 5 /* INTERPOLATION */) {\n        // filter rewrite is applied before expression transform so only\n        // simple expressions are possible at this stage\n        rewriteFilter(node.content, context);\n    }\n    if (node.type === 1 /* ELEMENT */) {\n        node.props.forEach((prop) => {\n            if (prop.type === 7 /* DIRECTIVE */ &&\n                prop.name !== 'for' &&\n                prop.exp) {\n                rewriteFilter(prop.exp, context);\n            }\n        });\n    }\n};\nfunction rewriteFilter(node, context) {\n    if (node.type === 4 /* SIMPLE_EXPRESSION */) {\n        parseFilter(node, context);\n    }\n    else {\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            if (typeof child !== 'object')\n                continue;\n            if (child.type === 4 /* SIMPLE_EXPRESSION */) {\n                parseFilter(child, context);\n            }\n            else if (child.type === 8 /* COMPOUND_EXPRESSION */) {\n                rewriteFilter(node, context);\n            }\n            else if (child.type === 5 /* INTERPOLATION */) {\n                rewriteFilter(child.content, context);\n            }\n        }\n    }\n}\nfunction parseFilter(node, context) {\n    const exp = node.content;\n    let inSingle = false;\n    let inDouble = false;\n    let inTemplateString = false;\n    let inRegex = false;\n    let curly = 0;\n    let square = 0;\n    let paren = 0;\n    let lastFilterIndex = 0;\n    let c, prev, i, expression, filters = [];\n    for (i = 0; i < exp.length; i++) {\n        prev = c;\n        c = exp.charCodeAt(i);\n        if (inSingle) {\n            if (c === 0x27 && prev !== 0x5c)\n                inSingle = false;\n        }\n        else if (inDouble) {\n            if (c === 0x22 && prev !== 0x5c)\n                inDouble = false;\n        }\n        else if (inTemplateString) {\n            if (c === 0x60 && prev !== 0x5c)\n                inTemplateString = false;\n        }\n        else if (inRegex) {\n            if (c === 0x2f && prev !== 0x5c)\n                inRegex = false;\n        }\n        else if (c === 0x7c && // pipe\n            exp.charCodeAt(i + 1) !== 0x7c &&\n            exp.charCodeAt(i - 1) !== 0x7c &&\n            !curly &&\n            !square &&\n            !paren) {\n            if (expression === undefined) {\n                // first filter, end of expression\n                lastFilterIndex = i + 1;\n                expression = exp.slice(0, i).trim();\n            }\n            else {\n                pushFilter();\n            }\n        }\n        else {\n            switch (c) {\n                case 0x22:\n                    inDouble = true;\n                    break; // \"\n                case 0x27:\n                    inSingle = true;\n                    break; // '\n                case 0x60:\n                    inTemplateString = true;\n                    break; // `\n                case 0x28:\n                    paren++;\n                    break; // (\n                case 0x29:\n                    paren--;\n                    break; // )\n                case 0x5b:\n                    square++;\n                    break; // [\n                case 0x5d:\n                    square--;\n                    break; // ]\n                case 0x7b:\n                    curly++;\n                    break; // {\n                case 0x7d:\n                    curly--;\n                    break; // }\n            }\n            if (c === 0x2f) {\n                // /\n                let j = i - 1;\n                let p;\n                // find first non-whitespace prev char\n                for (; j >= 0; j--) {\n                    p = exp.charAt(j);\n                    if (p !== ' ')\n                        break;\n                }\n                if (!p || !validDivisionCharRE.test(p)) {\n                    inRegex = true;\n                }\n            }\n        }\n    }\n    if (expression === undefined) {\n        expression = exp.slice(0, i).trim();\n    }\n    else if (lastFilterIndex !== 0) {\n        pushFilter();\n    }\n    function pushFilter() {\n        filters.push(exp.slice(lastFilterIndex, i).trim());\n        lastFilterIndex = i + 1;\n    }\n    if (filters.length) {\n        (process.env.NODE_ENV !== 'production') &&\n            warnDeprecation(\"COMPILER_FILTER\" /* COMPILER_FILTERS */, context, node.loc);\n        for (i = 0; i < filters.length; i++) {\n            expression = wrapFilter(expression, filters[i], context);\n        }\n        node.content = expression;\n    }\n}\nfunction wrapFilter(exp, filter, context) {\n    context.helper(RESOLVE_FILTER);\n    const i = filter.indexOf('(');\n    if (i < 0) {\n        context.filters.add(filter);\n        return `${toValidAssetId(filter, 'filter')}(${exp})`;\n    }\n    else {\n        const name = filter.slice(0, i);\n        const args = filter.slice(i + 1);\n        context.filters.add(name);\n        return `${toValidAssetId(name, 'filter')}(${exp}${args !== ')' ? ',' + args : args}`;\n    }\n}\n\nconst seen$1 = new WeakSet();\nconst transformMemo = (node, context) => {\n    if (node.type === 1 /* ELEMENT */) {\n        const dir = findDir(node, 'memo');\n        if (!dir || seen$1.has(node)) {\n            return;\n        }\n        seen$1.add(node);\n        return () => {\n            const codegenNode = node.codegenNode ||\n                context.currentNode.codegenNode;\n            if (codegenNode && codegenNode.type === 13 /* VNODE_CALL */) {\n                // non-component sub tree should be turned into a block\n                if (node.tagType !== 1 /* COMPONENT */) {\n                    makeBlock(codegenNode, context);\n                }\n                node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\n                    dir.exp,\n                    createFunctionExpression(undefined, codegenNode),\n                    `_cache`,\n                    String(context.cached++)\n                ]);\n            }\n        };\n    }\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\n    return [\n        [\n            transformOnce,\n            transformIf,\n            transformMemo,\n            transformFor,\n            ...([transformFilter] ),\n            ...((process.env.NODE_ENV !== 'production')\n                    ? [transformExpression]\n                    : []),\n            transformSlotOutlet,\n            transformElement,\n            trackSlotScopes,\n            transformText\n        ],\n        {\n            on: transformOn,\n            bind: transformBind,\n            model: transformModel\n        }\n    ];\n}\n// we name it `baseCompile` so that higher order compilers like\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\nfunction baseCompile(template, options = {}) {\n    const onError = options.onError || defaultOnError;\n    const isModuleMode = options.mode === 'module';\n    /* istanbul ignore if */\n    {\n        if (options.prefixIdentifiers === true) {\n            onError(createCompilerError(46 /* X_PREFIX_ID_NOT_SUPPORTED */));\n        }\n        else if (isModuleMode) {\n            onError(createCompilerError(47 /* X_MODULE_MODE_NOT_SUPPORTED */));\n        }\n    }\n    const prefixIdentifiers = !true ;\n    if (options.cacheHandlers) {\n        onError(createCompilerError(48 /* X_CACHE_HANDLER_NOT_SUPPORTED */));\n    }\n    if (options.scopeId && !isModuleMode) {\n        onError(createCompilerError(49 /* X_SCOPE_ID_NOT_SUPPORTED */));\n    }\n    const ast = isString(template) ? baseParse(template, options) : template;\n    const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();\n    transform(ast, extend({}, options, {\n        prefixIdentifiers,\n        nodeTransforms: [\n            ...nodeTransforms,\n            ...(options.nodeTransforms || []) // user transforms\n        ],\n        directiveTransforms: extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\n        )\n    }));\n    return generate(ast, extend({}, options, {\n        prefixIdentifiers\n    }));\n}\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexport { BASE_TRANSITION, CAMELIZE, CAPITALIZE, CREATE_BLOCK, CREATE_COMMENT, CREATE_ELEMENT_BLOCK, CREATE_ELEMENT_VNODE, CREATE_SLOTS, CREATE_STATIC, CREATE_TEXT, CREATE_VNODE, FRAGMENT, GUARD_REACTIVE_PROPS, IS_MEMO_SAME, IS_REF, KEEP_ALIVE, MERGE_PROPS, NORMALIZE_CLASS, NORMALIZE_PROPS, NORMALIZE_STYLE, OPEN_BLOCK, POP_SCOPE_ID, PUSH_SCOPE_ID, RENDER_LIST, RENDER_SLOT, RESOLVE_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT, RESOLVE_FILTER, SET_BLOCK_TRACKING, SUSPENSE, TELEPORT, TO_DISPLAY_STRING, TO_HANDLERS, TO_HANDLER_KEY, UNREF, WITH_CTX, WITH_DIRECTIVES, WITH_MEMO, advancePositionWithClone, advancePositionWithMutation, assert, baseCompile, baseParse, buildDirectiveArgs, buildProps, buildSlots, checkCompatEnabled, createArrayExpression, createAssignmentExpression, createBlockStatement, createCacheExpression, createCallExpression, createCompilerError, createCompoundExpression, createConditionalExpression, createForLoopParams, createFunctionExpression, createIfStatement, createInterpolation, createObjectExpression, createObjectProperty, createReturnStatement, createRoot, createSequenceExpression, createSimpleExpression, createStructuralDirectiveTransform, createTemplateLiteral, createTransformContext, createVNodeCall, extractIdentifiers, findDir, findProp, generate, getBaseTransformPreset, getConstantType, getInnerRange, getMemoedVNodeCall, getVNodeBlockHelper, getVNodeHelper, hasDynamicKeyVBind, hasScopeRef, helperNameMap, injectProp, isBuiltInType, isCoreComponent, isFunctionType, isInDestructureAssignment, isMemberExpression, isMemberExpressionBrowser, isMemberExpressionNode, isReferencedIdentifier, isSimpleIdentifier, isSlotOutlet, isStaticArgOf, isStaticExp, isStaticProperty, isStaticPropertyKey, isTemplateNode, isText, isVSlot, locStub, makeBlock, noopDirectiveTransform, processExpression, processFor, processIf, processSlotOutlet, registerRuntimeHelpers, resolveComponentType, toValidAssetId, trackSlotScopes, trackVForSlotScopes, transform, transformBind, transformElement, transformExpression, transformModel, transformOn, traverseNode, walkBlockDeclarations, walkFunctionParams, walkIdentifiers, warnDeprecation };\n"],
  "mappings": "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",
  "names": ["isComponent", "match", "loc", "i", "returnType", "hoistStatic", "children", "node", "arg", "props", "camelize"]
}
